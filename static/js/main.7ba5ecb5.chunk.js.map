{"version":3,"sources":["utils/easings.js","state/index.js","state/localStorage.js","SplineGraph.js","logo.svg","LabeledCheckbox.js","Button.js","ColorInput.js","EditorView.js","Preview.js","ExportView.js","ThemePreview.js","OverviewView.js","App.js","serviceWorker.js","index.js"],"names":["lerp","start","end","position","easings","easeInSine","name","handles","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","Shade","types","model","id","optional","identifier","uuid","h","number","s","l","extend","self","views","merged","value","format","unit","hsl","hex","rgb","formatHex","r","g","b","Color","string","hueSpline","array","saturationSpline","lightnessSpline","interpolations","bounds","hue","min","max","saturation","lightness","getYAtX","key","Math","curve","Bezier","line","p1","x","y","p2","intersect","get","intersects","Array","getParent","interpolationCount","fill","map","el","i","create","shades","actions","setHex","startOrEnd","v","newValue","index","setEasing","splineKey","easingKey","spline","easing","newSpline","remove","removeColor","duplicate","node","dup","getType","Object","assign","getSnapshot","addColor","Message","body","date","Date","toISOString","status","visible","boolean","afterCreate","setTimeout","dismiss","Theme","favorite","colors","baseColorId","maybe","backgroundColorId","backgroundShadeIndex","backgroundShade","shade","undefined","find","color","baseColor","exportText","formatter","prefix","separator","ui","getRoot","showSemicolon","exportLanguage","camelCase","kebabCase","colorspace","join","options","push","item","splice","indexOf","toggleFavorite","resetStore","applySnapshot","defaultState","loadState","snapshot","removeTheme","setBackgroundShade","colorId","UIStore","isFooterOpen","isGraphVisible","isValueVisible","messages","tab","currentTheme","maybeNull","reference","view","visibleMessages","filter","m","addMessage","toggleGraphs","toggleValues","toggleFooter","setColorspace","setExportLanguage","setTab","setCurrentTheme","theme","themes","RootStore","version","addTheme","persisitedState","serializedState","localStorage","getItem","JSON","parse","store","window","__store__","addEventListener","e","state","stringify","setItem","err","console","log","saveState","STATE","selectedNode","svgBounds","scaleX","scaleY","scaleYOncurve","Styles","styled","div","isMouseDown","SplineGraph","observer","onSplineUpdate","onEasingSelect","width","height","attribute","onStartUpdate","onEndUpdate","svgRef","useRef","useState","isMenuOpen","setIsMenuOpen","handleMouseDown","button","handleMouseMove","handleMouseEnd","clientX","clientY","current","getBoundingClientRect","scaleLinear","domain","range","clamp","mouse","xIndex","yIndex","removeEventListener","graphScaleY","scaledS","className","viewBox","ref","onContextMenu","preventDefault","x1","y1","x2","y2","cx","cy","onMouseDown","d","entries","onClick","title","Root","label","LabeledCheckbox","props","type","checked","onChange","target","checkedLabel","uncheckedLabel","App","confirmLabel","children","requiresConfirmation","clickedOnce","setClicked","ColorInput","style","colorIndex","length","onInput","applyPatch","op","path","icon","circleHalfFill","circleHalf","Button","copyIcon","deleteIcon","warningIcon","arr","isExtreme","isBackground","namePadding","toString","disabled","String","paintBrushBroadFill","paintBrushBroad","swatchesIcon","ExportView","outputEl","toUpperCase","select","document","execCommand","onDoubleClick","heartFilledIcon","heartIcon","heartBold","swatchesBold","group","ThemePreview","addIcon","restoreIcon","houseIcon","slidersIcon","circlesIcon","shareBold","Boolean","toLowerCase","OverviewView","EditorView","Preview","threeDotsVertical","parseInt","eyeIcon","eyeOffIcon","message","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ba5ecb5.chunk.js","sourcesContent":["export const lerp = (start, end, position) => {\n  return (1 - position) * start + position * end\n}\n\nexport const easings = {\n  easeInSine: { name: \"Sine In\", handles: [0.12, 0, 0.39, 0] },\n  easeOutSine: { name: \"Sine Out\", handles: [0.61, 1, 0.88, 1] },\n  easeInOutSine: { name: \"Sine\", handles: [0.37, 0, 0.63, 1] },\n  easeInQuad: { name: \"Quad In\", handles: [0.11, 0, 0.5, 0] },\n  easeOutQuad: { name: \"Quad Out\", handles: [0.5, 1, 0.89, 1] },\n  easeInOutQuad: { name: \"Quad\", handles: [0.45, 0, 0.55, 1] },\n  easeInCubic: { name: \"Cubic In\", handles: [0.32, 0, 0.67, 0] },\n  easeOutCubic: { name: \"Cubic Out\", handles: [0.33, 1, 0.68, 1] },\n  easeInOutCubic: { name: \"Cubic\", handles: [0.65, 0, 0.35, 1] },\n  easeInQuart: { name: \"Quart In\", handles: [0.5, 0, 0.75, 0] },\n  easeOutQuart: { name: \"Quart Out\", handles: [0.25, 1, 0.5, 1] },\n  easeInOutQuart: { name: \"Quart\", handles: [0.76, 0, 0.24, 1] },\n  easeInQuint: { name: \"Quint In\", handles: [0.64, 0, 0.78, 0] },\n  easeOutQuint: { name: \"Quint Out\", handles: [0.22, 1, 0.36, 1] },\n  easeInOutQuint: { name: \"Quint\", handles: [0.83, 0, 0.17, 1] },\n  easeInExpo: { name: \"Expo In\", handles: [0.7, 0, 0.84, 0] },\n  easeOutExpo: { name: \"Expo Out\", handles: [0.16, 1, 0.3, 1] },\n  easeInOutExpo: { name: \"Expo\", handles: [0.87, 0, 0.13, 1] },\n  easeInCirc: { name: \"Circ In\", handles: [0.55, 0, 1, 0.45] },\n  easeOutCirc: { name: \"Circ Out\", handles: [0, 0.55, 0.45, 1] },\n  easeInOutCirc: { name: \"Circ\", handles: [0.85, 0, 0.15, 1] },\n  easeInBack: { name: \"Back In\", handles: [0.36, 0, 0.66, -0.56] },\n  easeOutBack: { name: \"Back Out\", handles: [0.34, 1.56, 0.64, 1] },\n  easeInOutBack: { name: \"Back\", handles: [0.68, -0.6, 0.32, 1.6] },\n}\n","import {\n  types,\n  getType,\n  getSnapshot,\n  applySnapshot,\n  getParent,\n  getRoot,\n} from \"mobx-state-tree\"\nimport { format } from \"d3-format\"\nimport { hsl, rgb } from \"d3-color\"\nimport Bezier from \"bezier-js\"\nimport { loadState, saveState } from \"./localStorage\"\nimport { kebabCase, camelCase } from \"lodash\"\nimport uuid from \"uuid/v4\"\nimport { easings, lerp } from \"../utils/easings\"\nimport { toJS } from \"mobx\"\n\n// clone does... just that, and does not update `id`\nconst cloneWithNewId = (node, id) =>\n  getType(node).create(Object.assign({}, getSnapshot(node), { id }))\n\n/**\n * @name Shade\n * @description Mostly interpolations\n */\nconst Shade = types\n  .model(\"Shade\", {\n    id: types.optional(types.identifier, uuid),\n    h: types.optional(types.number, 0),\n    s: types.optional(types.number, 100),\n    l: types.optional(types.number, 100),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get merged() {\n          return [\n            { value: format(\".0f\")(self.h), unit: \"º\" },\n            { value: format(\".0f\")(self.s), unit: \"%\" },\n            { value: format(\".0f\")(self.l), unit: \"%\" },\n          ]\n        },\n        get hsl() {\n          return `hsl(${format(\".2f\")(self.h % 360)}, ${format(\".2f\")(\n            self.s\n          )}%, ${format(\".2f\")(self.l)}%)`\n        },\n        get hex() {\n          return rgb(self.hsl).formatHex()\n        },\n        get rgb() {\n          const value = rgb(self.hsl)\n          return `rgb(${format(\".2f\")(value.r)}, ${format(\".2f\")(\n            value.g\n          )}, ${format(\".2f\")(value.b)})`\n        },\n      },\n    }\n  })\n\n/**\n * @name Color\n * @description contains shades,\n */\nconst Color = types\n  .model(\"Color\", {\n    id: types.optional(types.identifier, uuid),\n    name: types.optional(types.string, \"Gray\"),\n    hueSpline: types.optional(\n      types.array(types.number),\n      [0, 78, 0.33, 150, 0.66, 170, 1, 174]\n    ),\n    saturationSpline: types.optional(\n      types.array(types.number),\n      [0, 60, 0.5, 80, 0.8, 80, 1, 60]\n    ),\n    lightnessSpline: types.optional(\n      types.array(types.number),\n      [0, 90, 0.33, 66, 0.66, 33, 1, 12]\n    ),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get interpolations() {\n          const bounds = {\n            hue: {\n              min: 0,\n              max: 480,\n            },\n            saturation: {\n              min: 0,\n              max: 100,\n            },\n            lightness: {\n              min: 0,\n              max: 100,\n            },\n          }\n          const getYAtX = (position, key) => {\n            position = Math.min(position, 0.999999)\n            var curve = new Bezier(...self[`${key}Spline`])\n            var line = {\n              p1: { x: position, y: -1000 },\n              p2: { x: position, y: 1000 },\n            }\n            const intersect = curve.get(curve.intersects(line)[0])\n            return Math.min(\n              Math.max(intersect.y, bounds[key].min),\n              bounds[key].max\n            )\n          }\n\n          return Array(getParent(self, 2).interpolationCount)\n            .fill()\n            .map((el, i) => {\n              const position = Math.max(i, 0.00001) / (getParent(self, 2).interpolationCount - 1)\n              return Shade.create({\n                h: getYAtX(position, \"hue\"),\n                s: getYAtX(position, \"saturation\"),\n                l: getYAtX(position, \"lightness\"),\n              })\n            })\n        },\n\n        get shades() {\n          return self.interpolations\n        },\n      },\n      actions: {\n        setHex(startOrEnd, v) {\n          const newValue = hsl(v)\n          const index = startOrEnd === \"start\" ? 1 : 7\n\n          self.hueSpline[index] = newValue.h || 0\n          self.saturationSpline[index] = newValue.s * 100\n          self.lightnessSpline[index] = newValue.l * 100\n        },\n        setEasing(splineKey, easingKey) {\n          const spline = self[`${splineKey}Spline`]\n          const start = spline[1]\n          const end = spline[7]\n          const easing = easings[easingKey]\n          const newSpline = [\n            spline[0],\n            spline[1],\n\n            easing.handles[0],\n            lerp(start, end, easing.handles[1]),\n            easing.handles[2],\n            lerp(start, end, easing.handles[3]),\n\n            spline[6],\n            spline[7],\n          ]\n          self[`${splineKey}Spline`] = newSpline\n        },\n        remove() {\n          getParent(self, 2).removeColor(self)\n        },\n        duplicate() {\n          const dup = cloneWithNewId(self, uuid())\n          getParent(self, 2).addColor(dup)\n        },\n      },\n    }\n  })\n\n/**\n * @name Message\n */\nexport const Message = types\n  .model(\"Message\", {\n    id: types.optional(types.identifier, uuid),\n    body: types.optional(types.string, \"\"),\n    date: types.optional(types.string, new Date().toISOString()),\n    status: types.optional(types.string, \"secondary\"),\n    visible: types.optional(types.boolean, true),\n  })\n  .actions((self) => ({\n    afterCreate() {\n      setTimeout(() => {\n        self.dismiss()\n      }, 5000)\n    },\n    dismiss() {\n      self.visible = false\n    },\n  }))\n\n/**\n * @name Theme\n */\nexport const Theme = types\n  .model(\"Theme\", {\n    id: types.optional(types.identifier, uuid),\n    name: types.optional(types.string, \"New Theme\"),\n    favorite: types.optional(types.boolean, false),\n    colors: types.optional(types.array(Color), [{}]),\n    baseColorId: types.maybe(types.string, null),\n    interpolationCount: types.optional(types.number, 10),\n    backgroundColorId: types.maybe(types.string),\n    backgroundShadeIndex: types.maybe(types.number),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get backgroundShade() {\n          if (\n            self.backgroundColorId &&\n            self.backgroundShadeIndex !== undefined\n          ) {\n            let shade\n            self.colors.find((color) => {\n              if (color.id === self.backgroundColorId) {\n                shade = color.shades[self.backgroundShadeIndex]\n                if (shade) {\n                  return true\n                }\n              }\n            })\n            return shade\n          }\n        },\n        get baseColor() {\n          return self.colors.find((color) => color.id === self.baseColorId)\n        },\n        get exportText() {\n          const ui = getRoot(self).ui\n\n          let formatter,\n            prefix,\n            separator,\n            showSemicolon = true\n          switch (ui.exportLanguage) {\n            case \"sass\":\n              formatter = camelCase\n              prefix = \"$\"\n              separator = \": \"\n              showSemicolon = false\n              break\n            case \"csv\":\n              formatter = (v) => v\n              prefix = \"\"\n              separator = \",\"\n              showSemicolon = false\n              break\n            case \"css\":\n            default:\n              formatter = kebabCase\n              prefix = \"--\"\n              separator = \": \"\n              break\n          }\n          return self.colors\n            .map((color) => {\n              return color.shades\n                .map((shade, i) => {\n                  const name = formatter(`${color.name} ${i + 1}`)\n                  const value = shade[ui.colorspace]\n\n                  return `${prefix}${name}${separator}${value}${\n                    showSemicolon ? \";\" : \"\"\n                  }`\n                })\n                .join(\"\\n\")\n            })\n            .join(\"\\n\\n\")\n        },\n      },\n      actions: {\n        addColor(options) {\n          self.colors.push(options || {})\n        },\n        removeColor(item) {\n          self.colors.splice(self.colors.indexOf(item), 1)\n        },\n        toggleFavorite() {\n          self.favorite = !self.favorite\n        },\n        resetStore() {\n          applySnapshot(self, defaultState)\n        },\n        loadState(snapshot) {\n          applySnapshot(self, snapshot)\n        },\n        remove() {\n          getParent(self, 2).removeTheme(self)\n        },\n        setBackgroundShade(colorId, value) {\n          self.backgroundColorId = colorId\n          self.backgroundShadeIndex = value\n        },\n      },\n    }\n  })\n\n/**\n * @name UIStore\n */\nexport const UIStore = types\n  .model(\"UIStore\", {\n    isFooterOpen: types.optional(types.boolean, false),\n    isGraphVisible: types.optional(types.boolean, true),\n    isValueVisible: types.optional(types.boolean, true),\n    exportLanguage: types.optional(types.string, \"css\"),\n    messages: types.array(Message),\n    colorspace: types.optional(types.string, \"hsl\"),\n    tab: types.optional(types.string, \"overview\"),\n    currentTheme: types.maybeNull(types.reference(Theme)),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get view() {\n          if (self.currentTheme) {\n            return self.tab\n          } else {\n            return \"overview\"\n          }\n        },\n        get visibleMessages() {\n          return self.messages.filter((m) => m.visible)\n        },\n      },\n      actions: {\n        addMessage(options) {\n          self.messages.push(options || {})\n        },\n        toggleGraphs(options) {\n          self.isGraphVisible = !self.isGraphVisible\n        },\n        toggleValues(options) {\n          self.isValueVisible = !self.isValueVisible\n        },\n        toggleFooter(options) {\n          self.isFooterOpen = !self.isFooterOpen\n        },\n        setColorspace(value) {\n          self.colorspace = value\n        },\n        setExportLanguage(value) {\n          self.exportLanguage = value\n        },\n        setTab(value) {\n          self.tab = value\n        },\n        setCurrentTheme(theme) {\n          self.currentTheme = theme\n          self.tab = \"editor\"\n          self.backgroundShadeIndex = undefined\n          self.backgroundColorId = undefined\n        },\n      },\n    }\n  })\n\nconst defaultState = {\n  themes: [\n    Theme.create({\n      colors: [Color.create({})],\n    }),\n  ],\n  ui: {},\n}\n\nexport const RootStore = types\n  .model(\"Store\", {\n    themes: types.array(Theme),\n    ui: types.optional(UIStore, {}),\n    version: \"1.0\",\n  })\n  .extend((self) => ({\n    actions: {\n      addTheme(options) {\n        self.themes.push(options || {})\n      },\n      resetStore() {\n        applySnapshot(self, defaultState)\n      },\n      loadState(snapshot) {\n        if (self.version) {\n          applySnapshot(self, snapshot)\n        }\n      },\n      removeTheme(item) {\n        self.themes.splice(self.themes.indexOf(item), 1)\n      },\n    },\n  }))\n\n// initialization and unload\n\nconst persisitedState = loadState()\n\nlet store = RootStore.create(persisitedState || defaultState)\nwindow.__store__ = store\n\nwindow.addEventListener(\"beforeunload\", function (e) {\n  // console.log('beforeunload')\n  // e.preventDefault()\n  // e.returnValue = '';\n  // console.log(JSON.parse(JSON.stringify(store)))\n  saveState(getSnapshot(store))\n})\n\nwindow.STATE = store\n\nexport default store\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"huepals__state\")\n    if (serializedState === null) {\n      return undefined\n    } else {\n      return JSON.parse(serializedState)\n    }\n  } catch {\n    return undefined\n  }\n}\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(\"huepals__state\", serializedState)\n  } catch (err) {\n    console.log({ err })\n  }\n}\n","import React, { useRef, useState } from \"react\"\nimport logo from \"./logo.svg\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { scaleLinear } from \"d3-scale\"\nimport { easings } from \"./utils/easings\"\n\nconst Styles = styled.div`\n  position: relative;\n  background: var(--body-background);\n  /* backdrop-filter: blur(10px); */\n  border-radius: 4px;\n\n  &.hue {\n    --start-saturation: 100%;\n    --end-saturation: 100%;\n    --start-lightness: 50%;\n    --end-lightness: 50%;\n  }\n  &.saturation {\n    --start-lightness: 50%;\n    --end-lightness: 50%;\n  }\n  &.lightness {\n  }\n  &.menu-open {\n    .splineGraph {\n      opacity: 0;\n    }\n    .easing-menu {\n      display: grid;\n    }\n  }\n\n  .rainbow {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    border-radius: 4px;\n    z-index: 0;\n    opacity: 0.5;\n    overflow: hidden;\n    &::before,\n    &::after {\n      content: \"\";\n      width: 2px;\n      height: 100%;\n      position: absolute;\n      background: linear-gradient(\n        to bottom,\n        hsl(480, 100%, 50%),\n        hsl(440, 100%, 50%),\n        hsl(400, 100%, 50%),\n        hsl(360, 100%, 50%),\n        hsl(320, 100%, 50%),\n        hsl(280, 100%, 50%),\n        hsl(240, 100%, 50%),\n        hsl(200, 100%, 50%),\n        hsl(160, 100%, 50%),\n        hsl(120, 100%, 50%),\n        hsl(80, 100%, 50%),\n        hsl(40, 100%, 50%),\n        hsl(0, 100%, 50%)\n      );\n    }\n    &::before {\n      left: 0;\n    }\n    &::after {\n      right: 0;\n    }\n  }\n  .splineGraph {\n    overflow: visible;\n    width: 8rem;\n    height: 100%;\n    vector-effect: non-scaling-stroke;\n    position: relative;\n    border-radius: 4px;\n    box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n\n    path,\n    line,\n    circle {\n      stroke-width: 2px;\n      fill: none;\n      vector-effect: non-scaling-stroke;\n      stroke-linecap: round;\n    }\n    line {\n      stroke: var(--fg-4);\n    }\n    path {\n      stroke: var(--fg-1);\n      pointer-events: none;\n    }\n    .point {\n      fill: transparent;\n      stroke-width: 2px;\n\n      &--oncurve {\n        r: 0.07;\n        fill: var(--bg-1);\n      }\n      &--oncurve-2 {\n        r: 0.06;\n        stroke: var(--fg-4);\n        stroke-width: 2.5px;\n        fill: var(--body-background);\n        pointer-events: none;\n      }\n      &--oncurve-sample {\n        r: 0.015;\n        pointer-events: none;\n        &.start {\n          fill: hsl(\n            var(--start-hue),\n            var(--start-saturation),\n            var(--start-lightness)\n          );\n        }\n        &.end {\n          fill: hsl(\n            var(--end-hue),\n            var(--end-saturation),\n            var(--end-lightness)\n          );\n        }\n      }\n      &--offcurve {\n        fill: var(--body-background);\n        r: 0.07;\n      }\n      &--offcurve-2 {\n        r: 0.06;\n        stroke: var(--fg-4);\n        stroke-width: 2.5px;\n        pointer-events: none;\n      }\n      &--offcurve-3 {\n        fill: var(--fg-4);\n        r: 0.015;\n        pointer-events: none;\n      }\n    }\n  }\n  .easing-menu {\n    display: none;\n    position: absolute;\n    inset: 0;\n    grid-template-columns: 1fr 1fr 1fr;\n    overflow: auto;\n    box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n  }\n  .easing-option {\n    display: flex;\n    background: none;\n    border: none;\n    padding: 0.5rem;\n    &:hover,\n    &:focus {\n      path {\n        stroke: var(--fg-2);\n      }\n    }\n    svg {\n      overflow: visible;\n      height: 100%;\n      width: 100%;\n    }\n    path {\n      stroke: var(--fg-4);\n      fill: none;\n      vector-effect: non-scaling-stroke;\n      stroke-width: 2px;\n      stroke-linecap: round;\n    }\n  }\n`\n\nlet isMouseDown = false\nlet initialMouse,\n  initial,\n  selectedNode,\n  svgBounds,\n  scaleX,\n  scaleY,\n  scaleYOncurve\n\nconst SplineGraph = observer(\n  ({\n    spline,\n    color,\n    onSplineUpdate,\n    onEasingSelect,\n    max,\n    min,\n    width,\n    height = 1,\n    onStartUpdate,\n    onEndUpdate,\n    attribute,\n  }) => {\n    const svgRef = useRef(null)\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n    const handleMouseDown = (e, index) => {\n      // right click\n      if (e.button === 2) return\n\n      isMouseDown = true\n      selectedNode = index\n      window.addEventListener(\"mousemove\", handleMouseMove)\n      window.addEventListener(\"mouseup\", handleMouseEnd)\n      window.addEventListener(\"mouseleave\", handleMouseEnd)\n\n      initialMouse = { x: e.clientX, y: e.clientY }\n      svgBounds = svgRef.current.getBoundingClientRect()\n      scaleX = scaleLinear()\n        .domain([svgBounds.x, svgBounds.x + svgBounds.width])\n        .range([0, 1])\n        .clamp(true)\n      scaleY = scaleLinear()\n        .domain([svgBounds.y, svgBounds.y + svgBounds.height])\n        .range([max, min])\n      scaleYOncurve = scaleLinear()\n        .domain([svgBounds.y, svgBounds.y + svgBounds.height])\n        .range([max, min])\n        .clamp(true)\n    }\n    const handleMouseMove = (e) => {\n      if (isMouseDown) {\n        const mouse = { x: e.clientX, y: e.clientY }\n        let newSpline = [...spline]\n\n        const xIndex = selectedNode * 2\n        const yIndex = xIndex + 1\n\n        switch (selectedNode) {\n          case 0: // first\n          case 3: // last\n            newSpline[yIndex] = scaleYOncurve(mouse.y)\n            break\n          case 1: // first offcurve\n          case 2: // last offcurve\n            newSpline[xIndex] = scaleX(mouse.x)\n            newSpline[yIndex] = scaleY(mouse.y)\n            break\n          default:\n            break\n        }\n\n        onSplineUpdate(newSpline)\n      }\n    }\n    const handleMouseEnd = (e) => {\n      isMouseDown = false\n      window.removeEventListener(\"mousemove\", handleMouseMove)\n      window.removeEventListener(\"mouseup\", handleMouseEnd)\n      window.removeEventListener(\"mouseleave\", handleMouseEnd)\n    }\n\n    const graphScaleY = scaleLinear().domain([min, max]).range([height, 0])\n\n    const scaledS = spline.map((el, i) => (i % 2 === 0 ? el : graphScaleY(el)))\n\n    return (\n      <Styles className={`SplineGraph ${attribute} ${isMenuOpen && \"menu-open\"}`} height={height}>\n        {attribute === \"hue\" && <div className=\"rainbow\" />}\n        <svg\n          className=\"splineGraph\"\n          viewBox={`0 0 1 ${height}`}\n          ref={svgRef}\n          onContextMenu={(e)=>{e.preventDefault(); setIsMenuOpen(true)}}\n        >\n          <line\n            x1={scaledS[0]}\n            y1={scaledS[1]}\n            x2={scaledS[2]}\n            y2={scaledS[3]}\n          />\n          <circle\n            className=\"point point--offcurve\"\n            cx={scaledS[2]}\n            cy={scaledS[3]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 1)\n            }}\n          />\n          <circle\n            className=\"point point--offcurve-2\"\n            cx={scaledS[2]}\n            cy={scaledS[3]}\n          />\n          <circle\n            className=\"point point--offcurve-3\"\n            cx={scaledS[2]}\n            cy={scaledS[3]}\n          />\n\n          <line\n            x1={scaledS[4]}\n            y1={scaledS[5]}\n            x2={scaledS[6]}\n            y2={scaledS[7]}\n          />\n          <circle\n            className=\"point point--offcurve\"\n            cx={scaledS[4]}\n            cy={scaledS[5]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 2)\n            }}\n          />\n          <circle\n            className=\"point point--offcurve-2\"\n            cx={scaledS[4]}\n            cy={scaledS[5]}\n          />\n          <circle\n            className=\"point point--offcurve-3\"\n            cx={scaledS[4]}\n            cy={scaledS[5]}\n          />\n\n          <path\n            d={`\n            M ${scaledS[0]}, ${scaledS[1]}\n            C ${scaledS[2]}, ${scaledS[3]}\n              ${scaledS[4]}, ${scaledS[5]}\n              ${scaledS[6]}, ${scaledS[7]}\n            `}\n          />\n\n          <circle\n            className=\"point point--oncurve\"\n            cx={scaledS[0]}\n            cy={scaledS[1]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 0)\n            }}\n          />\n          <circle\n            className=\"point point--oncurve-2\"\n            cx={scaledS[0]}\n            cy={scaledS[1]}\n          />\n          <circle\n            className=\"point point--oncurve-sample start\"\n            cx={scaledS[0]}\n            cy={scaledS[1]}\n          />\n\n          <circle\n            className=\"point point--oncurve\"\n            cx={scaledS[6]}\n            cy={scaledS[7]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 3)\n            }}\n          />\n          <circle\n            className=\"point point--oncurve-2\"\n            cx={scaledS[6]}\n            cy={scaledS[7]}\n          />\n          <circle\n            className=\"point point--oncurve-sample end\"\n            cx={scaledS[6]}\n            cy={scaledS[7]}\n          />\n        </svg>\n\n          <div className=\"easing-menu\">\n            {Object.entries(easings).map(([key, value]) => (\n              <button\n                onClick={() => {\n                  onEasingSelect(key)\n                  setIsMenuOpen(false)\n                }}\n                onContextMenu={(e)=>{e.preventDefault(); setIsMenuOpen(false)}}\n                className=\"easing-option\"\n                title={value.name}\n              >\n                <svg viewBox=\"0 0 1 1\">\n                  <path d={`\n                    M 0, 0\n                    C ${value.handles[0]}, ${value.handles[1]}\n                      ${value.handles[2]}, ${value.handles[3]}\n                      1, 1\n                  `} />\n                </svg>\n              </button>\n            ))}\n          </div>\n      </Styles>\n    )\n  }\n)\n\nexport default SplineGraph\n","export default __webpack_public_path__ + \"static/media/logo.927f1d60.svg\";","import React from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\n\nconst Root = styled.label`\n  display: flex;\n  gap: 0.4rem;\n  align-items: center;\n  input {\n    position: absolute;\n    opacity: 0;\n  }\n  &.checked {\n    color: var(--checked-color, var(--fg-1));\n    svg {\n      color: var(--checked-icon-color, var(--fg-2));\n    }\n  }\n  &.unchecked {\n    color: var(--unchecked-color, var(--fg-1));\n    svg {\n      color: var(--unchecked-icon-color, var(--fg-4));\n    }\n  }\n`\n\nconst LabeledCheckbox = (props) => {\n  return (\n    <Root\n      className={`LabeledCheckbox ${props.value ? \"checked\" : \"unchecked\"}`}\n    >\n      <input\n        type={props.type || \"checkbox\"}\n        name={props.name}\n        checked={props.value}\n        onChange={(e) => props.onChange(e.target.checked)}\n      />\n      {props.value ? props.checkedLabel : props.uncheckedLabel}\n    </Root>\n  )\n}\n\nexport default LabeledCheckbox\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport styled from \"styled-components\"\n\nconst Styles = styled.button`\n  padding: 0.5rem 1rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--background);\n  border: 0;\n  border-radius: 4px;\n  color: inherit;\n  font: inherit;\n  font-weight: 700;\n  box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n  color: var(--color);\n  padding: 0.5rem 1rem;\n  &:focus {\n    outline: none;\n  }\n  &:focus-visible {\n    outline: 1px solid var(--fg-3);\n  }\n\n  &.primary {\n    --color: var(--blue-2);\n    --background: var(--blue-7);\n  }\n  &,\n  &.secondary {\n    --color: var(--fg-2);\n    --background: var(--body-background);\n  }\n  &.success {\n    --color: var(--green-2);\n    --background: var(--green-7);\n  }\n  &.danger {\n    --color: var(--red-4);\n    --background: var(--gray-7);\n  }\n  &.warning {\n    --color: var(--gray-2);\n    --background: var(--green-7);\n  }\n  &.info {\n    --color: var(--gray-2);\n    --background: var(--green-7);\n  }\n\n  &.text {\n    transform: none;\n    background: none;\n    box-shadow: none;\n  }\n  &:not(.text) {\n    & svg:not(:last-child) {\n      margin-right: 0.5em;\n    }\n    &:hover,\n    &:focus {\n      /* background: var(--highlight); */\n      outline: 0;\n    }\n    &:active {\n      transition: all 0.1s var(--ease-out);\n      transform: translateY(1px);\n      background: var(--background);\n      box-shadow: 0.5px 1px var(--highlight) inset,\n        -0.5px -1px var(--shading) inset, 0 0 var(--shading),\n        -1px -1px rgba(0, 0, 0, 0.1);\n    }\n  }\n`\n\nconst App = observer(\n  ({ status, className, label, confirmLabel, children, onClick }) => {\n    const requiresConfirmation = !!confirmLabel\n    const [clickedOnce, setClicked] = useState(false)\n\n    return (\n      <Styles\n        className={`Button ${className} ${status}`}\n        onClick={() => {\n          if (!requiresConfirmation || clickedOnce) {\n            onClick()\n            setClicked(false)\n          } else {\n            setClicked(true)\n\n            // Unset after 5s\n            setTimeout(() => {\n              setClicked(false)\n            }, 5000)\n          }\n        }}\n      >\n        {clickedOnce ? confirmLabel : label}\n      </Styles>\n    )\n  }\n)\n\nexport default App\n","import React, { useRef } from \"react\"\nimport logo from \"./logo.svg\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { line, curveBundle } from \"d3-shape\"\nimport { scaleLinear } from \"d3-scale\"\n\nconst Styles = styled.label`\n  cursor: pointer;\n\n  input {\n    position: absolute;\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`\n\nconst ColorInput = observer((props) => {\n  return (\n    <Styles className=\"ColorInput\">\n      <div\n        className=\"swatch\"\n        style={{ \"--color\": props.value, \"--base-color\": props.baseColor }}\n      />\n      <input type=\"color\" {...props} />\n    </Styles>\n  )\n})\n\nexport default ColorInput\n","import React from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport SplineGraph from \"./SplineGraph\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport LabeledCheckbox from \"./LabeledCheckbox\"\nimport Button from \"./Button\"\nimport ColorInput from \"./ColorInput\"\nimport { Icon } from \"@iconify/react\"\nimport deleteIcon from \"@iconify-icons/ph/trash-duotone\"\nimport warningIcon from \"@iconify-icons/ph/warning-duotone\"\nimport circleHalf from \"@iconify-icons/ph/circle-half-duotone\"\nimport circleHalfFill from \"@iconify-icons/ph/circle-half-fill\"\nimport swatchesIcon from \"@iconify-icons/ph/swatches-duotone\"\nimport copyIcon from \"@iconify-icons/ph/copy-duotone\"\nimport paintBrushBroad from \"@iconify-icons/ph/paint-brush-broad-duotone\"\nimport paintBrushBroadFill from \"@iconify-icons/ph/paint-brush-broad-fill\"\n\nconst Styles = styled.div`\n  display: flex;\n  height: 100%;\n  flex-flow: column;\n  overflow: auto;\n  padding-bottom: 3rem;\n  .graphs {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-areas:\n      \"4rem 4rem\"\n      \"4rem 4rem\";\n    padding: 1rem 0;\n    margin-bottom: -1rem;\n    background: var(--body-background);\n  }\n  .graph {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n  }\n  .graph-hue {\n    grid-row: 1 / 3;\n  }\n  .graph-lightness,\n  .graph-saturation {\n    h3 {\n      top: auto;\n      bottom: 0.5rem;\n    }\n  }\n  h3 {\n    position: absolute;\n    pointer-events: none;\n    color: var(--fg-3);\n    line-height: 1;\n    margin: 0;\n    top: 0.5rem;\n    left: 0.5rem;\n    z-index: 1;\n    abbr {\n      text-decoration: none;\n    }\n  }\n  .colors {\n    display: flex;\n    flex: 1 1 auto;\n    padding: 0 2rem 3rem;\n    width: min-content;\n  }\n  .color {\n    padding: 1rem 0 0;\n    width: 17rem;\n    flex: 0 0 auto;\n    text-overflow: ellipsis;\n    & + .color {\n      margin-left: 2rem;\n    }\n    &.values-hidden {\n      width: 128px;\n    }\n  }\n  .title-line {\n    font-size: var(--size-1);\n    display: flex;\n    align-items: center;\n    margin: 0;\n    gap: 0.8rem;\n    color: var(--fg-1);\n    --unchecked-icon-color: var(--fg-2);\n    --checked-icon-color: var(--fg-1);\n    input[type=\"text\"] {\n      all: unset;\n      width: 100%;\n    }\n    svg {\n      height: 20px;\n      width: 20px;\n    }\n    .checkbox {\n      cursor: pointer;\n      input {\n        position: absolute;\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      input:checked + svg {\n        color: var(--fg-1);\n      }\n    }\n  }\n  .list {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    margin-top: 1rem;\n  }\n\n  &.graphs-hidden .list-header {\n    top: 0;\n  }\n  &.graphs-visible .list-header {\n    top: 20rem;\n  }\n  .list-header {\n    position: sticky;\n    padding-left: 5rem;\n    font-family: var(--mono);\n    font-size: var(--size-0);\n    color: var(--fg-5);\n    z-index: 1;\n    background: var(--body-background);\n    box-shadow: 0 7px 10px -7px var(--shadow-color);\n    span {\n      width: 3rem;\n      display: inline-block;\n      text-align: right;\n      padding-right: 1.1rem;\n    }\n    abbr {\n      text-decoration: none;\n    }\n  }\n  .shade {\n    position: relative;\n    display: flex;\n    text-align: left;\n    white-space: nowrap;\n    align-items: center;\n    border-radius: 4px;\n    gap: 1rem;\n\n    &:first-child,\n    &:last-child {\n      cursor: pointer;\n      &::before {\n        content: \"\";\n        position: absolute;\n        display: block;\n        top: -0.5rem;\n        right: -1rem;\n        bottom: -0.5rem;\n        left: -1rem;\n        border-radius: 4px;\n        background: var(--fg-3);\n        opacity: 0;\n        z-index: -1;\n      }\n      &:hover {\n        &::before {\n          opacity: 1;\n        }\n      }\n    }\n  }\n  .shade-text {\n    display: flex;\n    flex: 1 1 auto;\n    align-items: baseline;\n    margin: 0;\n    gap: 1rem;\n  }\n  .shade-background-field {\n    flex: 0 0 auto;\n    color: var(--fg-4);\n    width: 1rem;\n    position: relative;\n    &::after {\n      content: \"\";\n      opacity: 0.2;\n      position: absolute;\n      width: 1.6rem;\n      height: 1.6rem;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n    &.active {\n      color: var(--fg-1);\n    }\n\n    input {\n      opacity: 0;\n      position: absolute;\n      clip: rect(0 0 0 0);\n      clip-path: inset(50%);\n      width: 1px;\n      height: 1px;\n      overflow: hidden;\n      position: absolute;\n    }\n  }\n  .shade-title {\n    margin: 0;\n    font-size: var(--size-0);\n    color: var(--fg-5);\n  }\n  .shade-title-padding {\n    color: var(--fg-5);\n  }\n  .shade-value {\n    display: flex;\n    margin: 0;\n    font-size: var(--size-0);\n    font-family: var(--mono);\n    color: var(--fg-1);\n  }\n  .shade-value-padding {\n    color: var(--fg-5);\n  }\n  .shade-value-value {\n    display: inline-block;\n    width: 2.5em;\n    text-align: right;\n  }\n  .shade-value-unit {\n    color: var(--fg-4);\n  }\n  .shade-value-separator {\n    display: inline-block;\n    color: var(--fg-5);\n    opacity: 0;\n  }\n  .add-button-container {\n    flex: 0 0 auto;\n    width: 256px;\n    margin: 1rem 0 1rem 2rem;\n  }\n  .add-button {\n    width: 100%;\n    font: inherit;\n    font-size: var(--size-1);\n    font-weight: 400;\n    position: sticky;\n    top: 1rem;\n  }\n  .remove-button {\n    line-height: 0.5;\n    z-index: 11;\n    padding-inline: 0;\n    font-size: var(--size-1);\n  }\n`\n\nconst App = observer(({ theme }) => {\n  return (\n    <Styles\n      className={`Editor ${\n        state.ui.isGraphVisible ? \"graphs-visible\" : \"graphs-hidden\"\n      }`}\n    >\n      <div className=\"colors\">\n        {theme.colors.map((color, colorIndex) => {\n          const start = color.shades[0]\n          const end = color.shades[color.shades.length - 1]\n          return (\n            <div\n              className=\"color\"\n              style={{\n                \"--start-hue\": `${start.h}deg`,\n                \"--end-hue\": `${end.h}deg`,\n                \"--start-saturation\": `${start.s}%`,\n                \"--end-saturation\": `${end.s}%`,\n                \"--start-lightness\": `${start.l}%`,\n                \"--end-lightness\": `${end.l}%`,\n              }}\n            >\n              <h2 className=\"title-line\">\n                <input\n                  type=\"text\"\n                  value={color.name}\n                  onInput={(e) => {\n                    applyPatch(color, {\n                      op: \"add\",\n                      path: \"./name\",\n                      value: e.target.value,\n                    })\n                  }}\n                />\n                <LabeledCheckbox\n                  value={theme.baseColorId === color.id}\n                  onChange={(v) => {\n                    if (v) {\n                      applyPatch(theme, {\n                        op: \"add\",\n                        path: \"./baseColorId\",\n                        value: color.id,\n                      })\n                    } else {\n                      applyPatch(theme, {\n                        op: \"add\",\n                        path: \"./baseColorId\",\n                        value: undefined,\n                      })\n                    }\n                  }}\n                  checkedLabel={<Icon icon={circleHalfFill} />}\n                  uncheckedLabel={<Icon icon={circleHalf} />}\n                />\n                <Button\n                  status=\"text\"\n                  className=\"remove-button\"\n                  onClick={() => color.duplicate()}\n                  label={<Icon icon={copyIcon} />}\n                />\n                <Button\n                  status=\"text danger\"\n                  className=\"remove-button\"\n                  onClick={() => color.remove()}\n                  label={<Icon icon={deleteIcon} />}\n                  confirmLabel={<Icon icon={warningIcon} />}\n                />\n              </h2>\n              {state.ui.isGraphVisible && (\n                <div className=\"graphs\">\n                  <div className=\"graph graph-hue\">\n                    <h3>\n                      <abbr title=\"Hue\">H</abbr>\n                    </h3>\n                    <SplineGraph\n                      attribute=\"hue\"\n                      color={color}\n                      min={0}\n                      max={480}\n                      height={2.25}\n                      spline={color.hueSpline}\n                      onStartUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./start/h\",\n                          value: v,\n                        })\n                      }}\n                      onEndUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./end/h\",\n                          value: v,\n                        })\n                      }}\n                      onEasingSelect={(key) => {\n                        color.setEasing(\"hue\", key)\n                      }}\n                      onSplineUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./hueSpline\",\n                          value: v,\n                        })\n                      }}\n                    />\n                  </div>\n                  <div className=\"graph graph-saturation\">\n                    <h3>\n                      <abbr title=\"Saturation\">S</abbr>\n                    </h3>\n                    <SplineGraph\n                      attribute=\"saturation\"\n                      color={color}\n                      min={0}\n                      max={100}\n                      spline={color.saturationSpline}\n                      onStartUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./start/s\",\n                          value: v,\n                        })\n                      }}\n                      onEndUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./end/s\",\n                          value: v,\n                        })\n                      }}\n                      onEasingSelect={(key) => {\n                        color.setEasing(\"saturation\", key)\n                      }}\n                      onSplineUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./saturationSpline\",\n                          value: v,\n                        })\n                      }}\n                    />\n                  </div>\n                  <div className=\"graph graph-lightness\">\n                    <h3>\n                      <abbr title=\"Lightness\">L</abbr>\n                    </h3>\n                    <SplineGraph\n                      attribute=\"lightness\"\n                      color={color}\n                      min={0}\n                      max={100}\n                      spline={color.lightnessSpline}\n                      onStartUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./start/l\",\n                          value: v,\n                        })\n                      }}\n                      onEndUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./end/l\",\n                          value: v,\n                        })\n                      }}\n                      onEasingSelect={(key) => {\n                        color.setEasing(\"lightness\", key)\n                      }}\n                      onSplineUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./lightnessSpline\",\n                          value: v,\n                        })\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n              <div className=\"list\">\n                <div className=\"list-header\">\n                  <span>\n                    <abbr title=\"hue\">H</abbr>\n                  </span>\n                  <span>\n                    <abbr title=\"saturation\">S</abbr>\n                  </span>\n                  <span>\n                    <abbr title=\"lightness\">L</abbr>\n                  </span>\n                </div>\n                {color.shades.map((shade, i, arr) => {\n                  const isExtreme = i === 0 || i === arr.length - 1\n                  const isBackground =\n                    theme.backgroundColorId === color.id &&\n                    theme.backgroundShadeIndex === i\n                  const name = i + 1\n                  const namePadding = Array(\n                    arr.length.toString().length - name.toString().length\n                  ).fill(\"0\")\n                  return (\n                    <label className={`shade`} style={{ \"--color\": shade.hsl }}>\n                      <ColorInput\n                        disabled={!isExtreme}\n                        type=\"color\"\n                        value={shade.hex}\n                        baseColor={\n                          theme.baseColor && theme.baseColor.shades[i].hsl\n                        }\n                        onInput={(e) =>\n                          color.setHex(\n                            i === 0 ? \"start\" : \"end\",\n                            e.target.value\n                          )\n                        }\n                      />\n                      <dl className=\"shade-text\">\n                        <dt className=\"shade-title\">\n                          <span className=\"shade-title-padding\">\n                            {namePadding}\n                          </span>\n                          {name}\n                        </dt>\n                        {state.ui.isValueVisible && (\n                          <dd className=\"shade-value\">\n                            {shade.merged.map((v, i) => (\n                              <>\n                                {i !== 0 && (\n                                  <span className=\"shade-value-separator\">\n                                    |\n                                  </span>\n                                )}\n                                <span className=\"shade-value-value\">\n                                  <span className=\"shade-value-padding\">\n                                    {Array(3 - String(v.value).length).fill(\n                                      \"0\"\n                                    )}\n                                  </span>\n                                  {v.value}\n                                  <span className=\"shade-value-unit\">\n                                    {v.unit}\n                                  </span>\n                                </span>\n                              </>\n                            ))}\n                          </dd>\n                        )}\n                      </dl>\n                      <label\n                        className={\n                          \"shade-background-field \" +\n                          `${isBackground ? \"active\" : \"\"}`\n                        }\n                      >\n                        <Icon\n                          icon={\n                            isBackground ? paintBrushBroadFill : paintBrushBroad\n                          }\n                        ></Icon>\n                        <input\n                          className=\"shade-background-input\"\n                          type=\"radio\"\n                          name=\"background-color\"\n                          id={shade.hsl}\n                          value={shade.hex}\n                          checked={\n                            theme.backgroundColorId === color.id &&\n                            theme.backgroundShadeIndex === i\n                          }\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              theme.setBackgroundShade(color.id, i)\n                            }\n                          }}\n                        />\n                      </label>\n                    </label>\n                  )\n                })}\n              </div>\n            </div>\n          )\n        })}\n\n        <div className=\"add-button-container\">\n          <Button\n            className=\"add-button\"\n            status=\"secondary\"\n            onClick={() => {\n              theme.addColor()\n            }}\n            label={\n              <>\n                <Icon icon={swatchesIcon} />\n                <span>Add Color</span>\n              </>\n            }\n          />\n        </div>\n      </div>\n    </Styles>\n  )\n})\n\nexport default App\n","import React from \"react\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { line, curveBasis } from \"d3-shape\"\nimport SplineGraph from \"./SplineGraph\"\nimport Button from \"./Button\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport ColorInput from \"./ColorInput\"\n\nconst Styles = styled.div`\n  display: flex;\n  height: 100%;\n  flex-flow: column;\n  padding: 1rem 1rem 4rem;\n  overflow: auto;\n  .colors {\n    display: flex;\n    flex: 1 1 auto;\n    padding-top: 6rem;\n  }\n  .color {\n    position: relative;\n    scroll-snap-align: start;\n    flex: 0 0 auto;\n    & + .color {\n      margin-left: 1rem;\n    }\n  }\n  .title {\n    display: flex;\n    align-items: center;\n    margin: 0 0 1rem;\n    input[type=\"text\"] {\n      all: unset;\n      width: 100%;\n      margin-left: 0.5rem;\n    }\n    .checkbox {\n      cursor: pointer;\n      input {\n        position: absolute;\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      .viz {\n        width: 1rem;\n        height: 1rem;\n        border: 2px solid var(--gray-8);\n        border-radius: 1rem;\n      }\n      input:checked + .viz {\n        border-color: var(--highlight-2);\n      }\n    }\n  }\n  .shade {\n    position: relative;\n    display: flex;\n    text-align: left;\n    white-space: nowrap;\n    align-items: center;\n    border-radius: 4px;\n    & + .shade {\n      margin-top: 1rem;\n    }\n  }\n  .row-labels {\n    padding-right: 1rem;\n  }\n  .row-label {\n    width: 3rem;\n    display: block;\n    line-height: 2rem;\n    margin-bottom: 1rem;\n    text-align: right;\n    white-space: nowrap;\n  }\n  .column-label {\n    position: absolute;\n    bottom: 100%;\n    right: 0;\n    transform: translate(-1rem, -1rem) rotate(45deg);\n    transform-origin: bottom right;\n    white-space: nowrap;\n  }\n  .playground {\n    max-width: 30rem;\n    line-height: 2rem;\n    user-select: text;\n    font-size: var(--size-0);\n    line-height: var(--size-2);\n    em {\n      font-size: var(--size-1);\n    }\n    *:focus {\n      outline: 0;\n    }\n  }\n`\n\nconst App = observer(({ theme }) => {\n  const size = 2\n  const padding = 1\n  const withPadding = (count) => count * size + (count - 1) * padding\n  const colorCount = theme.colors.length\n  const shadeCount = theme.colors[0].shades.length\n\n  return (\n    <Styles className=\"Preview\">\n      <div className=\"colors\">\n        <div className=\"row-labels\">\n          {theme.colors[0].shades.map((color, i) => (\n            <div className=\"row-label\">{i + 1}</div>\n          ))}\n        </div>\n        {theme.colors.map((color) => (\n          <div className=\"color\">\n            <div className=\"column-label\">{color.name}</div>\n            {color.shades.map((shade, i, arr) => (\n              <div className={`shade`} style={{ \"--color\": shade.hsl }}>\n                <div\n                  className=\"swatch\"\n                  style={{\n                    \"--base-color\":\n                      theme.baseColor && theme.baseColor.shades[i].hsl,\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      {/* <div className=\"playground\">\n        <h1 contentEditable spellCheck=\"false\">\n          Lorem ipsum\n        </h1>\n        <p>\n          <em contentEditable spellCheck=\"false\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n            sit in libero debitis dolorem accusantium nam beatae, doloribus,\n            assumenda, inventore cum placeat nihil unde perspiciatis harum\n            consectetur veniam! Harum, officiis!\n          </em>\n        </p>\n        <blockquote contentEditable spellCheck=\"false\">\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n          sit in libero debitis dolorem accusantium nam beatae, doloribus,\n          assumenda, inventore cum placeat nihil unde perspiciatis harum\n          consectetur veniam! Harum, officiis!\n        </blockquote>\n        <p contentEditable spellCheck=\"false\">\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n          sit in libero debitis dolorem accusantium nam beatae, doloribus,\n          assumenda, inventore cum placeat nihil unde perspiciatis harum\n          consectetur veniam! Harum, officiis!\n        </p>\n        <h4 contentEditable spellCheck=\"false\">\n          Lorem ipsum\n        </h4>\n        <p contentEditable spellCheck=\"false\">\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n          sit in libero debitis dolorem accusantium nam beatae, doloribus,\n          assumenda, inventore cum placeat nihil unde perspiciatis harum\n          consectetur veniam! Harum, officiis!\n        </p>\n        <Button\n          className=\"add-button\"\n          onClick={() => {}}\n          label={\n            <span contentEditable spellCheck=\"false\">\n              <span>Add Color</span>\n            </span>\n          }\n        />\n      </div> */}\n    </Styles>\n  )\n})\n\nexport default App\n","import React, { useRef } from \"react\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { Icon } from \"@iconify/react\"\nimport copyIcon from \"@iconify-icons/ph/copy-duotone\"\nimport Button from \"./Button\"\n\nconst Styles = styled.div`\n  height: 100%;\n  padding-bottom: 3rem;\n  flex: 1 1 auto;\n  overflow: auto;\n  user-select: text;\n  padding: 2rem;\n\n  textarea {\n    width: 0;\n    height: 0;\n    opacity: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  .options {\n    margin-bottom: 1rem;\n    & > * {\n      margin-right: 1rem;\n    }\n  }\n`\n\nconst ExportView = observer(({ theme }) => {\n  const outputEl = useRef(null)\n  return (\n    <Styles className=\"ExportView\">\n      <div className=\"options\">\n        <select\n          onChange={(e) => state.ui.setExportLanguage(e.target.value)}\n          value={state.ui.exportLanguage}\n        >\n          {[\"css\", \"sass\", \"csv\"].map((el) => (\n            <option value={el}>{el.toUpperCase()}</option>\n          ))}\n        </select>\n        <select\n          onChange={(e) => state.ui.setColorspace(e.target.value)}\n          value={state.ui.colorspace}\n        >\n          {[\"hex\", \"rgb\", \"hsl\"].map((el) => (\n            <option value={el}>{el.toUpperCase()}</option>\n          ))}\n        </select>\n      </div>\n\n      <Button\n        onClick={() => {\n          outputEl.current.select()\n          document.execCommand(\"copy\")\n          state.ui.addMessage({\n            body: \"Copied to clipboard\",\n            status: \"success\",\n          })\n        }}\n        label={\n          <>\n            <Icon height={`${1.25 ** 2}em`} icon={copyIcon} />\n            <span>Copy to clipboard</span>\n          </>\n        }\n      />\n      <textarea ref={outputEl}>{theme.exportText}</textarea>\n      <pre>{theme.exportText}</pre>\n    </Styles>\n  )\n})\n\nexport default ExportView\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport { Icon } from \"@iconify/react\"\nimport Button from \"./Button\"\nimport deleteIcon from \"@iconify-icons/ph/trash-duotone\"\nimport warningIcon from \"@iconify-icons/ph/warning-duotone\"\nimport heartIcon from \"@iconify-icons/ph/heart-duotone\"\nimport heartFilledIcon from \"@iconify-icons/ph/heart-fill\"\n\nconst Styles = styled.div`\n  position: relative;\n  box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  .title {\n    display: flex;\n    margin: 0;\n    padding: 0.5rem;\n    font-size: var(--size-1);\n    line-height: 1rem;\n    input {\n      width: 100%;\n      flex: 1 1 auto;\n      background: var(--shadow-5);\n      box-shadow: var(--shadow-recessed);\n    }\n  }\n\n  .colors {\n    display: flex;\n    flex-flow: row;\n    flex: 1 1 auto;\n  }\n  .color {\n    display: flex;\n    flex-flow: column;\n    flex: 1 1 auto;\n  }\n  .shade {\n    flex: 1 1 auto;\n    background: var(--color);\n  }\n  .Button {\n    padding: 1rem;\n  }\n`\n\nconst App = observer(({ theme, onDoubleClick }) => {\n  return (\n    <Styles className=\"ThemePreview\" onDoubleClick={onDoubleClick}>\n      <h2 className=\"title\">\n        <input\n          type=\"text\"\n          value={theme.name}\n          onInput={(e) => {\n            applyPatch(theme, {\n              op: \"add\",\n              path: \"./name\",\n              value: e.target.value,\n            })\n          }}\n        />\n      </h2>\n      <div className=\"colors\">\n        {theme.colors.map((color) => (\n          <div className=\"color\">\n            {color.shades.map((shade) => (\n              <div className=\"shade\" style={{ \"--color\": shade.hex }} />\n            ))}\n          </div>\n        ))}\n      </div>\n      <footer>\n        <Button\n          status=\"text danger\"\n          onClick={() => theme.toggleFavorite()}\n          label={<Icon icon={theme.favorite ? heartFilledIcon : heartIcon} />}\n        />\n        <Button\n          status=\"text danger\"\n          onClick={() => theme.remove()}\n          label={<Icon icon={deleteIcon} />}\n          confirmLabel={<Icon icon={warningIcon} />}\n        />\n      </footer>\n    </Styles>\n  )\n})\n\nexport default App\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport EditorView from \"./EditorView\"\nimport Preview from \"./Preview\"\nimport ExportView from \"./ExportView\"\nimport ThemePreview from \"./ThemePreview\"\nimport Button from \"./Button\"\nimport { Icon } from \"@iconify/react\"\nimport addIcon from \"@iconify-icons/ph/folder-plus-duotone\"\nimport restoreIcon from \"@iconify-icons/ph/clock-counter-clockwise-duotone\"\nimport heartBold from \"@iconify-icons/ph/heart-bold\"\nimport swatchesBold from \"@iconify-icons/ph/swatches-bold\"\n\nconst Styles = styled.div`\n  padding: 1rem;\n  overflow: auto;\n  .themes-header {\n    display: flex;\n    align-items: center;\n    gap: 0.4rem;\n    font-size: var(--size-1);\n    line-height: 1;\n  }\n  .themes {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(12rem, 1fr));\n    grid-auto-rows: 12rem;\n    margin-bottom: 1rem;\n    grid-gap: 1rem;\n  }\n`\n\nconst App = observer(() => {\n  return (\n    <Styles className=\"Overview\">\n      {[\n        {\n          label: (\n            <>\n              <Icon icon={heartBold} /> Favorites\n            </>\n          ),\n          themes: state.themes.filter((theme) => theme.favorite),\n        },\n        {\n          label: (\n            <>\n              <Icon icon={swatchesBold} /> All\n            </>\n          ),\n          themes: state.themes.filter((theme) => !theme.favorite),\n        },\n      ]\n        .filter((group) => group.themes.length)\n        .map((group) => (\n          <>\n            <h2 className=\"themes-header\">{group.label}</h2>\n            <div className=\"themes\">\n              {group.themes.map((theme) => (\n                <ThemePreview\n                  theme={theme}\n                  onDoubleClick={() => state.ui.setCurrentTheme(theme)}\n                />\n              ))}\n              <Button\n                onClick={() => {\n                  state.addTheme()\n                }}\n                label={\n                  <>\n                    <Icon height={`${1.25 ** 2}em`} icon={addIcon} />\n                    <span>New Theme</span>\n                  </>\n                }\n              />\n            </div>\n          </>\n        ))}\n      <Button\n        status=\"danger\"\n        onClick={() => {\n          state.resetStore()\n        }}\n        label={\n          <>\n            <Icon height={`${1.25 ** 2}em`} icon={restoreIcon} />\n            <span>Reset All</span>\n          </>\n        }\n        confirmLabel={\n          <>\n            <Icon height={`${1.25 ** 2}em`} icon={restoreIcon} />\n            <span>Are you sure?</span>\n          </>\n        }\n      />\n    </Styles>\n  )\n})\n\nexport default App\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport EditorView from \"./EditorView\"\nimport Preview from \"./Preview\"\nimport ExportView from \"./ExportView\"\nimport OverviewView from \"./OverviewView\"\nimport LabeledCheckbox from \"./LabeledCheckbox\"\nimport Button from \"./Button\"\nimport { Icon } from \"@iconify/react\"\nimport houseIcon from \"@iconify-icons/ph/house-line-bold\"\nimport slidersIcon from \"@iconify-icons/ph/sliders-bold\"\nimport circlesIcon from \"@iconify-icons/ph/circles-four-bold\"\nimport shareBold from \"@iconify-icons/ph/share-bold\"\nimport eyeIcon from \"@iconify-icons/ph/eye-duotone\"\nimport eyeOffIcon from \"@iconify-icons/ph/eye-slash-duotone\"\nimport threeDotsVertical from \"@iconify-icons/ph/dots-three-outline-vertical-duotone\"\n\nconst Styles = styled.div`\n  display: flex;\n  height: 100%;\n  flex-flow: column;\n  background: var(--body-background);\n  background-color: var(--body-background);\n  color: var(--fg-1);\n  user-select: none;\n  font-family: var(--sans);\n  .tabs {\n    display: flex;\n    height: 3rem;\n    padding: 0 2rem;\n    background-color: var(--body-background);\n    box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n    z-index: 100;\n  }\n  .tab-item {\n    display: flex;\n    align-items: center;\n    line-height: 3rem;\n    font-size: var(--size-0);\n    padding: 0 0.75rem;\n    font-weight: 700;\n    margin: 0 0.75rem 0 -0.75rem;\n    &.inactive {\n      color: var(--fg-3);\n      svg {\n        color: var(--fg-4);\n      }\n    }\n    &.active {\n      box-shadow: 0 -0.15em var(--fg-3) inset;\n    }\n    &:active {\n      background: var(--fg-5);\n    }\n    input {\n      opacity: 0;\n      position: absolute;\n      width: 0;\n      height: 0;\n    }\n    svg {\n      color: var(--fg-2);\n      /* height: 1.25em; */\n      /* width: 1.25em; */\n      margin-right: 0.4rem;\n    }\n  }\n  .swatch {\n    width: 2rem;\n    height: 2rem;\n    position: relative;\n    border-radius: 1rem;\n    background: linear-gradient(\n      to right,\n      var(--base-color, var(--color)),\n      var(--base-color, var(--color)) 49%,\n      var(--color) 51%\n    );\n    flex: 0 0 auto;\n    overflow: hidden;\n  }\n  .messages {\n    margin-left: auto;\n  }\n  .message {\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    box-shadow: 0 2px 8px var(--shadow-color);\n\n    &.success {\n      background: var(--green-8);\n      color: var(--green-1);\n    }\n  }\n  .app-footer {\n    padding: 1rem;\n    position: absolute;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 3rem;\n    padding: 0 2rem;\n    background: var(--bg-2);\n    z-index: 1;\n    transition: 0.3s var(--ease-out) height;\n    background-color: var(--body-background);\n    box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n    --unchecked-icon-color: var(--fg-4);\n    --checked-icon-color: var(--fg-2);\n  }\n  .shade-count {\n    width: 3rem;\n    margin-left: 0.5rem;\n    box-shadow: var(--shadow-recessed);\n    background-color: var(--shadow-5);\n  }\n`\n\nconst App = observer(() => {\n  return (\n    <Styles\n      className={`App ${\n        state.ui.currentTheme &&\n        state.ui.currentTheme.backgroundShade &&\n        state.ui.currentTheme.backgroundShade.l > 50\n          ? \"theme--light\"\n          : \"theme--dark\"\n      }`}\n      style={{\n        \"--body-background\":\n          state.ui.currentTheme &&\n          state.ui.currentTheme.backgroundShade &&\n          state.ui.currentTheme.backgroundShade.hex,\n      }}\n    >\n      <div className=\"tabs\">\n        {[\n          { label: \"Overview\", icon: houseIcon },\n          !!state.ui.currentTheme && { label: \"Editor\", icon: slidersIcon },\n          !!state.ui.currentTheme && { label: \"Preview\", icon: circlesIcon },\n          !!state.ui.currentTheme && { label: \"Export\", icon: shareBold },\n        ]\n          .filter(Boolean)\n          .map((tab) => {\n            const value = tab.label.toLowerCase()\n            return (\n              <label\n                className={`tab-item ${\n                  state.ui.tab === value ? \"active\" : \"inactive\"\n                }`}\n              >\n                <input\n                  type=\"radio\"\n                  checked={state.ui.tab === value}\n                  value={value}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      if (value === \"overview\") {\n                        state.ui.setCurrentTheme(null)\n                      }\n                      state.ui.setTab(e.target.value)\n                    }\n                  }}\n                />\n                <Icon icon={tab.icon} /> {tab.label}\n              </label>\n            )\n          })}\n      </div>\n      {(() => {\n        switch (state.ui.view) {\n          case \"overview\":\n            return <OverviewView />\n          case \"editor\":\n            return <EditorView {...{ theme: state.ui.currentTheme }} />\n          case \"preview\":\n            return <Preview {...{ theme: state.ui.currentTheme }} />\n          case \"export\":\n            return <ExportView {...{ theme: state.ui.currentTheme }} />\n          default:\n            return <OverviewView />\n        }\n      })()}\n      {state.ui.view !== \"overview\" && (\n        <footer className={`app-footer`}>\n          <label>\n            <Icon icon={threeDotsVertical} />\n            Shades:\n            <input\n              className=\"shade-count\"\n              type=\"number\"\n              min=\"3\"\n              onChange={(e) => {\n                const value = parseInt(e.target.value)\n                if (value >= 3 && value <= 16) {\n                  applyPatch(state.ui.currentTheme, {\n                    op: \"add\",\n                    path: \"./interpolationCount\",\n                    value: value,\n                  })\n                }\n              }}\n              value={state.ui.currentTheme.interpolationCount}\n            />\n          </label>\n          <LabeledCheckbox\n            value={state.ui.isGraphVisible}\n            onChange={(v) => {\n              applyPatch(state.ui, {\n                op: \"add\",\n                path: \"./isGraphVisible\",\n                value: v,\n              })\n            }}\n            checkedLabel={\n              <>\n                <Icon icon={eyeIcon} /> Graphs\n              </>\n            }\n            uncheckedLabel={\n              <>\n                <Icon icon={eyeOffIcon} /> Graphs\n              </>\n            }\n          />\n          <div className=\"messages\">\n            {state.ui.visibleMessages.map((message) => (\n              <div className={`message ${message.status}`}>{message.body}</div>\n            ))}\n          </div>\n        </footer>\n      )}\n    </Styles>\n  )\n})\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}