{"version":3,"sources":["logo.svg","state/index.js","state/localStorage.js","SplineGraph.js","Button.js","ColorInput.js","EditorView.js","Preview.js","ExportView.js","ThemePreview.js","OverviewView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Shade","types","model","id","optional","identifier","uuid","h","number","s","l","extend","self","views","format","rgb","hsl","formatHex","value","r","g","b","Color","name","string","base","boolean","hueSpline","array","saturationSpline","lightnessSpline","getYAtX","position","bezier","Math","min","curve","Bezier","line","p1","x","y","p2","get","intersects","Array","getParent","interpolationCount","fill","map","el","i","create","interpolations","actions","setHex","startOrEnd","v","newValue","index","remove","removeColor","Message","body","date","Date","toISOString","status","visible","afterCreate","setTimeout","dismiss","Theme","favorite","colors","find","color","formatter","prefix","separator","ui","getRoot","showSemicolon","exportLanguage","camelCase","kebabCase","shades","shade","colorspace","join","addColor","options","push","item","splice","indexOf","toggleFavorite","resetStore","applySnapshot","defaultState","loadState","snapshot","removeTheme","UIStore","isFooterOpen","isGraphVisible","isValueVisible","messages","tab","currentTheme","maybeNull","reference","filter","m","addMessage","toggleGraphs","toggleValues","toggleFooter","setColorspace","setExportLanguage","setTab","setCurrentTheme","theme","themes","RootStore","addTheme","persisitedState","serializedState","localStorage","getItem","JSON","parse","store","window","__store__","addEventListener","e","state","stringify","setItem","err","console","log","saveState","getSnapshot","STATE","selectedNode","svgBounds","scaleX","scaleY","Styles","styled","div","isMouseDown","SplineGraph","observer","spline","onSplineUpdate","max","width","height","hue","onStartUpdate","onEndUpdate","svgRef","useRef","handleMouseDown","button","handleMouseMove","handleMouseEnd","clientX","clientY","current","getBoundingClientRect","scaleLinear","domain","range","clamp","mouse","newSpline","xIndex","yIndex","removeEventListener","graphScaleY","scaledS","className","viewBox","ref","d","x1","y1","x2","y2","cx","cy","onMouseDown","App","label","confirmLabel","onClick","children","requiresConfirmation","useState","clickedOnce","setClicked","ColorInput","props","style","baseColor","type","checked","onChange","applyPatch","op","path","target","onInput","Button","icon","deleteIcon","warningIcon","title","arr","isExtreme","length","RootElement","hex","paletteIcon","parseInt","visibleMessages","message","ExportView","outputEl","toUpperCase","select","document","execCommand","copyIcon","exportText","onDoubleClick","roundFavorite","ThemePreview","addIcon","restoreIcon","homeIcon","tuneIcon","columnIcon","importExportIcon","Boolean","toLowerCase","view","OverviewView","EditorView","Preview","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d4607e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import { types, getSnapshot, applySnapshot, getParent, getRoot } from \"mobx-state-tree\"\nimport BezierEasing from 'bezier-easing'\nimport {scaleLinear} from \"d3-scale\";\nimport {format} from 'd3-format'\nimport {hsl, rgb} from 'd3-color'\nimport Bezier from 'bezier-js'\nimport {loadState, saveState} from './localStorage'\nimport {kebabCase, camelCase} from 'lodash'\nimport uuid from 'uuid/v4'\n\nconst Shade = types.model('Shade', {\n  id: types.optional(types.identifier, uuid),\n  h: types.optional(types.number, 0),\n  s: types.optional(types.number, 100),\n  l: types.optional(types.number, 100),\n}).extend(self => {\n  return {\n    views: {\n      get hsl () {\n        return `hsl(${format('.2f')(self.h)}, ${format('.2f')(self.s)}%, ${format('.2f')(self.l)}%)`\n      },\n      get hex () {\n        return rgb(self.hsl).formatHex()\n      },\n      get rgb () {\n        const value = rgb(self.hsl)\n        return `rgb(${format('.2f')(value.r)}, ${format('.2f')(value.g)}, ${format('.2f')(value.b)})`\n      }\n    }\n  }\n})\n\nconst Color = types.model('Color', {\n  id: types.optional(types.identifier, uuid),\n  name: types.optional(types.string, 'Gray'),\n  base: types.optional(types.boolean, false),\n  hueSpline: types.optional(\n    types.array(types.number),\n    [0, 78, 0.33, 150, 0.66, 170, 1, 174]\n  ),\n  saturationSpline: types.optional(\n    types.array(types.number),\n    [0, 60, 0.5, 80, 0.8, 80, 1, 60]\n  ),\n  lightnessSpline: types.optional(\n    types.array(types.number),\n    [0, 90, 0.33, 66, 0.66, 33, 1, 12]\n  ),\n}).extend(self => {\n  return {\n    views: {\n      get interpolations () {\n        const getYAtX = (position, bezier) => {\n          position = Math.min(position, 0.999999)\n          var curve = new Bezier(...bezier);\n          var line = { p1: { x: position, y: -1000 }, p2: { x: position, y: 1000 } };\n          const intersect = curve.get(curve.intersects(line)[0])\n          return intersect.y\n        }\n\n        return Array(getParent(self, 2).interpolationCount).fill().map((el, i) => {\n          const position = i / (getParent(self, 2).interpolationCount - 1)\n          return Shade.create({\n            h: getYAtX(position, self.hueSpline),\n            s: getYAtX(position, self.saturationSpline),\n            l: getYAtX(position, self.lightnessSpline)\n          })\n        })\n      },\n\n      get shades () {\n        return self.interpolations\n      },\n    },\n    actions: {\n      setHex(startOrEnd, v) {\n        const newValue = hsl(v)\n        const index = startOrEnd === \"start\" ? 1 : 7\n\n        self.hueSpline[index] = newValue.h || 0\n        self.saturationSpline[index] = newValue.s * 100\n        self.lightnessSpline[index] = newValue.l * 100\n      },\n      remove() {\n        getParent(self, 2).removeColor(self)\n      }\n    }\n  }\n})\n\nexport const Message = types.model(\"Message\", {\n  id: types.optional(types.identifier, uuid),\n  body: types.optional(types.string, ''),\n  date: types.optional(types.string, new Date().toISOString()),\n  status: types.optional(types.string, 'secondary'),\n  visible: types.optional(types.boolean, true),\n}).actions(self => ({\n  afterCreate() {\n    setTimeout(() => {\n      self.dismiss()\n    }, 5000)\n  },\n  dismiss() {\n    self.visible = false\n  },\n}))\n\n\nexport const Theme = types.model(\"Theme\", {\n  id: types.optional(types.identifier, uuid),\n  name: types.optional(types.string, 'New Theme'),\n  favorite: types.optional(types.boolean, false),\n  colors: types.optional(types.array(Color), [{}]),\n  interpolationCount: types.optional(types.number, 10),\n}).extend(self => {\n  return {\n    views: {\n      get baseColor() {\n        return self.colors.find(color => color.base)\n      },\n      get exportText () {\n        const ui = getRoot(self).ui\n\n        let\n          formatter,\n          prefix,\n          separator,\n          showSemicolon = true;\n        switch(ui.exportLanguage) {\n          case 'sass':\n            formatter = camelCase\n            prefix = '$'\n            separator = ': '\n            showSemicolon = false\n            break;\n          case 'csv':\n            formatter = v => v\n            prefix = ''\n            separator = ','\n            showSemicolon = false\n            break;\n          case 'css':\n          default:\n            formatter = kebabCase\n            prefix = '--'\n            separator = ': '\n            break;\n        }\n        return self.colors.map(color => {\n          return color.shades.map((shade, i) => {\n            const name = formatter(`${color.name} ${i + 1}`)\n            const value = shade[ui.colorspace]\n\n            return `${prefix}${name}${separator}${value}${showSemicolon ? ';' : ''}`\n          }).join('\\n')\n        }).join('\\n\\n')\n      }\n    },\n    actions: {\n      addColor(options) {\n        self.colors.push(options || {})\n      },\n      removeColor (item) {\n        self.colors.splice(self.colors.indexOf(item), 1)\n      },\n      toggleFavorite () {\n        self.favorite = !self.favorite\n      },\n      resetStore() {\n        applySnapshot(self, defaultState)\n      },\n      loadState(snapshot) {\n        applySnapshot(self, snapshot)\n      },\n      remove() {\n        getParent(self, 2).removeTheme(self)\n      },\n    }\n  }\n})\n\n\nexport const UIStore = types.model(\"UIStore\", {\n  isFooterOpen: types.optional(types.boolean, false),\n  isGraphVisible: types.optional(types.boolean, true),\n  isValueVisible: types.optional(types.boolean, true),\n  exportLanguage: types.optional(types.string, 'css'),\n  messages: types.array(Message),\n  colorspace: types.optional(types.string, 'hsl'),\n  tab: types.optional(types.string, 'overview'),\n  currentTheme: types.maybeNull(types.reference(Theme))\n}).extend(self => {\n  return {\n    views: {\n      get view () {\n        if (self.currentTheme) {\n          return self.tab\n        } else {\n          return 'overview'\n        }\n      },\n      get visibleMessages() {\n        return self.messages.filter(m => m.visible)\n      }\n    },\n    actions: {\n      addMessage(options) {\n        self.messages.push(options || {})\n      },\n      toggleGraphs(options) {\n        self.isGraphVisible = !self.isGraphVisible;\n      },\n      toggleValues(options) {\n        self.isValueVisible = !self.isValueVisible;\n      },\n      toggleFooter(options) {\n        self.isFooterOpen = !self.isFooterOpen;\n      },\n      setColorspace(value) {\n        self.colorspace = value;\n      },\n      setExportLanguage(value) {\n        self.exportLanguage = value;\n      },\n      setTab(value) {\n        self.tab = value;\n      },\n      setCurrentTheme(theme) {\n        self.currentTheme = theme\n        self.tab = 'editor'\n      }\n    }\n  }\n})\n\nconst defaultState = {\n  themes: [Theme.create({\n    colors: [Color.create({})]\n  })],\n  ui: {}\n}\n\nexport const RootStore = types.model(\"Store\", {\n  themes: types.array(Theme),\n  ui: types.optional(UIStore, {}),\n}).extend(self => ({\n  actions: {\n    addTheme(options) {\n      self.themes.push(options || {})\n    },\n    resetStore() {\n      applySnapshot(self, defaultState)\n    },\n    loadState(snapshot) {\n      applySnapshot(self, snapshot)\n    },\n    removeTheme(item) {\n      self.themes.splice(self.themes.indexOf(item), 1)\n    }\n  }\n}))\n\n// initialization and unload\n\nconst persisitedState = loadState();\n\nlet store = RootStore.create(persisitedState || defaultState)\nwindow.__store__ = store\n\nwindow.addEventListener('beforeunload', function (e) {\n  // console.log('beforeunload')\n  // e.preventDefault()\n  // e.returnValue = '';\n  // console.log(JSON.parse(JSON.stringify(store)))\n  saveState(getSnapshot(store));\n});\n\nwindow.STATE = store\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('dialoguerobatic__state')\n    if (serializedState === null) {\n      return undefined\n    } else {\n      return JSON.parse(serializedState)\n    }\n  } catch {\n    return undefined\n  }\n}\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('dialoguerobatic__state', serializedState)\n  } catch (err) {\n    console.log({err})\n  }\n}\n","import React, {useRef} from 'react';\nimport logo from './logo.svg';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport {\n  line, curveBundle,\n} from 'd3-shape'\nimport {scaleLinear} from \"d3-scale\";\n\nconst Styles = styled.div`\nposition: relative;\n.rainbow {\n  width: calc(100% + 0.4rem);\n  margin-left: -0.2rem;\n  height: 100%;\n  position: absolute;\n  border-radius: 4px;\n  z-index: -1;\n  background: linear-gradient(to bottom,\n    hsl(480, 100%, 30%),\n    hsl(440, 100%, 30%),\n    hsl(400, 100%, 30%),\n    hsl(360, 100%, 30%),\n    hsl(320, 100%, 30%),\n    hsl(280, 100%, 30%),\n    hsl(240, 100%, 30%),\n    hsl(200, 100%, 30%),\n    hsl(160, 100%, 30%),\n    hsl(120, 100%, 30%),\n    hsl(80,  100%, 30%),\n    hsl(40,  100%, 30%),\n    hsl(0,   100%, 30%)\n  );\n}\n.splineGraph {\n  overflow: visible;\n  width: 8rem;\n  height: 100%;\n  vector-effect: non-scaling-stroke;\n  background: var(--gray-10);\n  border-radius: 4px;\n  box-shadow:\n    0 0 0 1px var(--gray-9),\n    var(--box-shadow);\n\n  path, line, circle {\n    stroke-width: 1px;\n    fill: none;\n    vector-effect: non-scaling-stroke;\n    mix-blend-mode: lighten;\n    stroke-linecap: round;\n  }\n  line {\n    stroke: var(--gray-5)\n  }\n  path {\n    stroke: var(--gray-2)\n  }\n  .point {\n    fill: transparent;\n    stroke-width: 2px;\n\n    &--oncurve {\n      stroke: var(--gray-2);\n      fill: var(--gray-9);\n    }\n    &--offcurve {\n      stroke: var(--gray-6);\n    }\n  }\n}\n`\n\nlet isMouseDown = false;\nlet initialMouse, initial, selectedNode, svgBounds, scaleX, scaleY;\n\nconst SplineGraph = observer(({\n  spline,\n  color,\n  onSplineUpdate,\n  max,\n  min,\n  width,\n  height = 1,\n  onStartUpdate,\n  onEndUpdate,\n  hue\n}) => {\n  const svgRef = useRef(null)\n\n  const handleMouseDown = (e, index) => {\n    // right click\n    if (e.button === 2) return\n\n    isMouseDown = true\n    selectedNode = index\n    window.addEventListener('mousemove', handleMouseMove)\n    window.addEventListener('mouseup', handleMouseEnd)\n    window.addEventListener('mouseleave', handleMouseEnd)\n\n    initialMouse = {x: e.clientX, y: e.clientY}\n    svgBounds = svgRef.current.getBoundingClientRect()\n    scaleX = scaleLinear()\n      .domain([svgBounds.x, svgBounds.x + svgBounds.width])\n      .range([0, 1])\n      .clamp(true)\n    scaleY = scaleLinear()\n      .domain([svgBounds.y, svgBounds.y + svgBounds.height])\n      .range([max, min])\n      .clamp(true)\n  }\n  const handleMouseMove = (e) => {\n    if (isMouseDown) {\n      const mouse = {x: e.clientX, y: e.clientY}\n      let newSpline = [...spline]\n\n      const xIndex = selectedNode * 2\n      const yIndex = xIndex + 1\n\n      switch (selectedNode) {\n        case 0: // first\n        case 3: // last\n          newSpline[yIndex] = scaleY(mouse.y)\n          break;\n        case 1: // first offcurve\n        case 2: // last offcurve\n          newSpline[xIndex] = scaleX(mouse.x)\n          newSpline[yIndex] = scaleY(mouse.y)\n          break;\n        default:\n          break;\n      }\n\n      onSplineUpdate(newSpline)\n\n    }\n  }\n  const handleMouseEnd = (e) => {\n    isMouseDown = false\n    window.removeEventListener('mousemove', handleMouseMove)\n    window.removeEventListener('mouseup', handleMouseEnd)\n    window.removeEventListener('mouseleave', handleMouseEnd)\n  }\n\n  const graphScaleY = scaleLinear()\n    .domain([min, max])\n    .range([height, 0])\n\n  const scaledS = spline.map((el, i) => (\n    i % 2 === 0\n      ? el\n      : graphScaleY(el)\n  ))\n\n  return (\n    <Styles className=\"SplineGraph\" height={height}>\n      {hue && <div className=\"rainbow\" />}\n      <svg className=\"splineGraph\" viewBox={`0 0 1 ${height}`} ref={svgRef}>\n        <path d={`\n        M ${scaledS[0]}, ${scaledS[1]}\n        C ${scaledS[2]}, ${scaledS[3]}\n          ${scaledS[4]}, ${scaledS[5]}\n          ${scaledS[6]}, ${scaledS[7]}\n        `}\n        />\n        <line x1={scaledS[0]} y1={scaledS[1]} x2={scaledS[2]} y2={scaledS[3]} />\n        <circle className=\"point point--oncurve\" cx={scaledS[0]} cy={scaledS[1]} r=\"0.075\"\n          onMouseDown={(e) => {handleMouseDown(e, 0)}}\n        />\n        <circle className=\"point point--offcurve\" cx={scaledS[2]} cy={scaledS[3]} r=\"0.075\"\n          onMouseDown={(e) => {handleMouseDown(e, 1)}}\n        />\n\n        <line x1={scaledS[4]} y1={scaledS[5]} x2={scaledS[6]} y2={scaledS[7]} />\n        <circle className=\"point point--oncurve\" cx={scaledS[6]} cy={scaledS[7]} r=\"0.075\"\n          onMouseDown={(e) => {handleMouseDown(e, 3)}}\n        />\n        <circle className=\"point point--offcurve\" cx={scaledS[4]} cy={scaledS[5]} r=\"0.075\"\n          onMouseDown={(e) => {handleMouseDown(e, 2)}}\n        />\n      </svg>\n    </Styles>\n  );\n})\n\nexport default SplineGraph;\n","import React, {useState} from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components'\n\nconst Styles = styled.button`\n  padding: 0.5rem 1rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--background);\n  border: 0;\n  border-radius: 4px;\n  color: inherit;\n  font: inherit;\n  font-weight: 700;\n  box-shadow:\n    0.5px 1px 0 var(--highlight) inset,\n    -0.5px -1px 0 var(--shading) inset,\n    0 2px 0 var(--shading),\n    0 3px 8px var(--shadow-color);\n  color: var(--color);\n  padding: 0.5rem 1rem;\n  transition: all 0.2s var(--ease-out);\n  transform: translateY(-2px);\n\n  &.primary      { --color: var(--blue-2);  --background: var(--blue-7);  --highlight: var(--blue-6);  --shading: var(--blue-8); }\n  &, &.secondary { --color: var(--gray-1);  --background: var(--gray-7);  --highlight: var(--gray-6);  --shading: var(--gray-8); }\n  &.success      { --color: var(--green-2); --background: var(--green-7); --highlight: var(--green-6); --shading: var(--green-8); }\n  &.danger       { --color: var(--red-4);   --background:  var(--gray-7); --highlight: var(--gray-6);  --shading: var(--gray-8); }\n  &.warning      { --color: var(--gray-2);  --background: var(--green-7); --highlight: var(--green-4); --shading: var(--red-9); }\n  &.info         { --color: var(--gray-2);  --background: var(--green-7); --highlight: var(--green-4); --shading: var(--red-9); }\n\n  &.text {\n    transform: none;\n    background: none;\n    box-shadow: none;\n  }\n  &:not(.text) {\n    & svg:not(:last-child) {\n      margin-right: 0.5em;\n    }\n    &:hover, &:focus {\n      /* background: var(--highlight); */\n      outline: 0;\n    }\n    &:active {\n      transition: all 0.1s var(--ease-out);\n      transform: translateY(0px);\n      background: var(--background);\n      box-shadow:\n        0.5px 1px var(--highlight) inset,\n        -0.5px -1px var(--shading) inset,\n        0 0 var(--shading),\n        -1px -1px rgba(0,0,0,0.1);\n    }\n  }\n\n`\n\nconst App = observer(({status, className, label, confirmLabel, children, onClick}) => {\n  const requiresConfirmation = !!confirmLabel\n  const [clickedOnce, setClicked] = useState(false)\n\n  return (\n    <Styles\n      className={`Button ${className} ${status}`}\n      onClick={() => {\n        if (!requiresConfirmation || clickedOnce) {\n          onClick()\n          setClicked(false)\n        } else {\n          setClicked(true)\n\n          // Unset after 5s\n          setTimeout(() => {\n            setClicked(false)\n          }, 5000)\n        }\n      }}\n    >\n      {clickedOnce\n        ? confirmLabel\n        : label\n      }\n    </Styles>\n  );\n})\n\nexport default App;\n","import React, {useRef} from 'react';\nimport logo from './logo.svg';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport {\n  line, curveBundle,\n} from 'd3-shape'\nimport {scaleLinear} from \"d3-scale\";\n\nconst Styles = styled.label`\ncursor: pointer;\n\ninput {\n  position: absolute;\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n`\n\nconst ColorInput = observer((props) => {\n  return (\n    <Styles className=\"ColorInput\">\n      <div className=\"swatch\" style={{\"--color\": props.value, \"--base-color\": props.baseColor}} />\n      <input\n        type=\"color\"\n        {...props}\n      />\n    </Styles>\n  );\n})\n\nexport default ColorInput;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport SplineGraph from './SplineGraph'\nimport { applyPatch } from 'mobx-state-tree';\nimport Button from './Button'\nimport ColorInput from './ColorInput'\nimport { Icon } from '@iconify/react';\nimport deleteIcon from '@iconify/icons-ic/outline-delete';\nimport warningIcon from '@iconify/icons-ic/baseline-warning';\nimport paletteIcon from '@iconify/icons-ic/outline-palette';\n\nconst Styles = styled.div`\ndisplay: flex;\nheight: 100%;\nflex-flow: column;\noverflow: auto;\npadding-bottom: 3rem;\n\n.graphs {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-areas:\n    \"4rem 4rem\"\n    \"4rem 4rem\";\n  padding: 1rem 0;\n  background: linear-gradient(to bottom, var(--body-background) 90%, #27263700 100%);\n}\n.graph {\n  position: relative;\n  display: flex;\n  justify-content: space-between\n}\n.graph-hue {\n  grid-row: 1 / 3;\n}\n.graph-lightness, .graph-saturation {\n  h3 { top: auto; bottom: 0.5rem; }\n}\nh3 {\n  position: absolute;\n  pointer-events: none;\n  opacity: 0.3;\n  margin: 0;\n  top: 0.5rem;\n  left: 0.5rem;\n  z-index: 1;\n  abbr {\n    text-decoration: none;\n  }\n}\n.colors {\n  display: flex;\n  flex: 1 1 auto;\n  padding: 0 2rem 3rem;\n  width: min-content;\n}\n.color {\n  padding: 1rem 0 0;\n  width: 17rem;\n  flex: 0 0 auto;\n  text-overflow: ellipsis;\n  & + .color {\n    margin-left: 2rem;\n  }\n  &.values-hidden {\n    width: 128px;\n  }\n}\n.title{\n  display: flex;\n  align-items: center;\n  margin: 0;\n  input[type=text] {\n    all: unset;\n    width: 100%;\n    margin-left: 0.5rem;\n  }\n  .checkbox {\n    cursor: pointer;\n    input {\n      position: absolute;\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n    .viz {\n      width: 1rem;\n      height: 1rem;\n      border: 2px solid var(--gray-6);\n      border-radius: 1rem;\n    }\n    input:checked + .viz {\n      border-color: var(--red-4);\n      background: var(--gray-6);\n    }\n  }\n}\n.shade {\n  position: relative;\n  display: flex;\n  text-align: left;\n  white-space: nowrap;\n  align-items: center;\n  border-radius: 4px;\n  & + .shade {\n    margin-top: 1rem;\n  }\n\n  &:first-child, &:last-child {\n    cursor: pointer;\n    &::before {\n      content: \"\";\n      position: absolute;\n      display: block;\n      top: -0.5rem;\n      right: -1rem;\n      bottom: -0.5rem;\n      left: -1rem;\n      border-radius: 4px;\n      background: var(--gray-8);\n      opacity: 0;\n      z-index: -1;\n    }\n    &:hover {\n      &::before {\n        opacity: 1;\n      }\n    }\n  }\n}\n.shade-title {\n  margin: 0;\n}\n.shade-value {\n  margin: 0;\n}\n.swatch {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 1rem;\n  background: var(--color);\n  margin-right: 1rem;\n  flex: 0 0 auto;\n  box-shadow:\n    0 0 0 3px inset var(--base-color),\n    var(--box-shadow);\n}\n.add-button-container {\n  flex: 0 0 auto;\n  width: 256px;\n  margin: 1rem 0 1rem 2rem;\n}\n.add-button {\n  width: 100%;\n  font: inherit;\n  font-size: 2rem;\n  font-weight: 700;\n  position: sticky;\n  top: 1rem;\n}\n.remove-button {\n  line-height: 0.5;\n  z-index: 11;\n}\n`\n\nconst App = observer(({theme}) => {\n  return (\n    <Styles className=\"Editor\">\n      <div className=\"colors\">\n        {theme.colors.map(color => (\n          <div className=\"color\">\n            <h2 className=\"title\">\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  name=\"base-radio\"\n                  checked={color.base}\n                  onChange={(e)=> {applyPatch(color, {op: 'add', path: './base', value: e.target.checked})}}\n                />\n                <div className=\"viz\" />\n              </label>\n              <input\n                type=\"text\"\n                value={color.name}\n                onInput={(e)=> {applyPatch(color, {op: 'add', path: './name', value: e.target.value})}}\n              />\n              <Button\n                status=\"text danger\"\n                className=\"remove-button\"\n                onClick={() => color.remove()}\n                label={<Icon icon={deleteIcon} />}\n                confirmLabel={<Icon icon={warningIcon} />}\n              />\n            </h2>\n            <div className=\"graphs\">\n              <div className=\"graph graph-hue\">\n                <h3><abbr title=\"Hue\">H</abbr></h3>\n                <SplineGraph\n                  hue\n                  color={color}\n                  min={0}\n                  max={480}\n                  height={2.25}\n                  spline={color.hueSpline}\n                  onStartUpdate={(v) => {applyPatch(color, {op: 'add', path: './start/h', value: v})}}\n                  onEndUpdate={(v) => {applyPatch(color, {op: 'add', path: './end/h', value: v})}}\n                  onSplineUpdate={(v)=> {applyPatch(color, {op: 'add', path: './hueSpline', value: v})}}\n                />\n              </div>\n              <div className=\"graph graph-saturation\">\n                <h3><abbr title=\"Saturation\">S</abbr></h3>\n                <SplineGraph\n                  color={color}\n                  min={0}\n                  max={100}\n                  spline={color.saturationSpline}\n                  onStartUpdate={(v) => {applyPatch(color, {op: 'add', path: './start/s', value: v})}}\n                  onEndUpdate={(v) => {applyPatch(color, {op: 'add', path: './end/s', value: v})}}\n                  onSplineUpdate={(v)=> {applyPatch(color, {op: 'add', path: './saturationSpline', value: v})}}\n                />\n              </div>\n              <div className=\"graph graph-lightness\">\n                <h3><abbr title=\"Lightness\">L</abbr></h3>\n                <SplineGraph\n                  color={color}\n                  min={0}\n                  max={100}\n                  spline={color.lightnessSpline}\n                  onStartUpdate={(v) => {applyPatch(color, {op: 'add', path: './start/l', value: v})}}\n                  onEndUpdate={(v) => {applyPatch(color, {op: 'add', path: './end/l', value: v})}}\n                  onSplineUpdate={(v)=> {applyPatch(color, {op: 'add', path: './lightnessSpline', value: v})}}\n                />\n              </div>\n            </div>\n            <div>\n              {color.shades.map((shade, i, arr) => {\n                const isExtreme = i === 0 || i === arr.length - 1\n                const RootElement = isExtreme ? 'label' : 'div'\n\n                return (\n                  <RootElement className={`shade`} style={{\"--color\": shade.hsl}} >\n                    {isExtreme ?\n                      <ColorInput\n                        type=\"color\"\n                        value={shade.hex}\n                        baseColor={theme.baseColor && theme.baseColor.shades[i].hsl}\n                        onInput={(e) => color.setHex(i === 0 ? 'start' : 'end', e.target.value)}\n                      />\n                    :\n                      <div\n                        className=\"swatch\"\n                        style={{\"--base-color\": theme.baseColor && theme.baseColor.shades[i].hsl}}\n                      />\n                    }\n                    <div>\n                      <h4 className=\"shade-title\">{color.name} {i + 1}</h4>\n                      {state.ui.isValueVisible &&\n                        <p className=\"shade-value\">{shade.hsl}</p>\n                      }\n                    </div>\n                  </RootElement>\n                )\n              })}\n            </div>\n          </div>\n        ))}\n\n        <div className=\"add-button-container\">\n          <Button\n            className=\"add-button\"\n            onClick={() => {theme.addColor()}}\n            label={<>\n              <Icon icon={paletteIcon} />\n              <span>Add Color</span>\n            </>}\n          />\n        </div>\n      </div>\n      <footer className={`app-footer`}>\n        <label>\n          Shades:\n          <input\n            className=\"shade-count\"\n            type=\"number\"\n            min=\"3\"\n            onChange={(e) => {\n              const value = parseInt(e.target.value)\n              if (value >= 3 && value <= 16) {\n                applyPatch(theme, {op: 'add', path: './interpolationCount', value: value})\n              }\n            }}\n            value={theme.interpolationCount}\n          />\n        </label>\n        <div className=\"messages\">\n          {state.ui.visibleMessages.map(message => (\n            <div className={`message ${message.status}`}>{message.body}</div>\n          ))}\n        </div>\n      </footer>\n    </Styles>\n  );\n})\n\nexport default App;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport {\n  line, curveBasis\n} from 'd3-shape'\nimport SplineGraph from './SplineGraph'\nimport { applyPatch } from 'mobx-state-tree';\nimport ColorInput from './ColorInput'\n\nconst Styles = styled.div`\ndisplay: flex;\nheight: 100%;\nflex-flow: column;\npadding: 1rem 1rem 4rem;\noverflow: auto;\n.colors {\n  display: flex;\n  flex: 1 1 auto;\n  padding-top: 6rem;\n}\n.color {\n  position: relative;\n  scroll-snap-align: start;\n  flex: 0 0 auto;\n  & + .color {\n    margin-left: 1rem;\n  }\n}\n.title{\n  display: flex;\n  align-items: center;\n  margin: 0 0 1rem;\n  input[type=text] {\n    all: unset;\n    width: 100%;\n    margin-left: 0.5rem;\n  }\n  .checkbox {\n    cursor: pointer;\n    input {\n      position: absolute;\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n    .viz {\n      width: 1rem;\n      height: 1rem;\n      border: 2px solid var(--gray-8);\n      border-radius: 1rem;\n    }\n    input:checked + .viz {\n      border-color: var(--gray-2);\n    }\n  }\n}\n.shade {\n  position: relative;\n  display: flex;\n  text-align: left;\n  white-space: nowrap;\n  align-items: center;\n  border-radius: 4px;\n  & + .shade {\n    margin-top: 1rem;\n  }\n}\n.row-labels {\n  padding-right: 1rem;\n}\n.row-label {\n  width: 3rem;\n  display: block;\n  line-height: 2rem;\n  margin-bottom: 1rem;\n  text-align: right;\n}\n.column-label {\n  position: absolute;\n  bottom: 100%;\n  right: 0;\n  transform: translate(-1rem, -1rem) rotate(45deg);\n  transform-origin: bottom right;\n}\n`\n\nconst App = observer(({theme}) => {\n  const size = 2\n  const padding = 1\n  const withPadding = (count) => (count * size) + ((count - 1) * padding)\n  const colorCount = theme.colors.length\n  const shadeCount = theme.colors[0].shades.length\n\n  return (\n    <Styles className=\"Preview\">\n      <div className=\"colors\">\n        <div className=\"row-labels\">\n          {theme.colors[0].shades.map((color, i) => (\n            <div className=\"row-label\">{i + 1}</div>\n          ))}\n        </div>\n        {theme.colors.map(color => (\n          <div className=\"color\">\n            <div className=\"column-label\">{color.name}</div>\n            {color.shades.map((shade, i, arr) => (\n              <div className={`shade`} style={{\"--color\": shade.hsl}} >\n                <div\n                  className=\"swatch\"\n                  style={{\"--base-color\": theme.baseColor && theme.baseColor.shades[i].hsl}}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Styles>\n  );\n})\n\nexport default App;\n","import React, {useRef} from 'react';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport { Icon } from '@iconify/react';\nimport copyIcon from '@iconify/icons-ic/outline-content-copy';\nimport Button from './Button'\n\nconst Styles = styled.div`\n  height: 100%;\n  padding-bottom: 3rem;\n  flex: 1 1 auto;\n  overflow: auto;\n  user-select: text;\n  padding: 2rem;\n\n  .tabs {\n    display: flex;\n    height: 3rem;\n    border-bottom: 1px solid var(--gray-8);\n  }\n  .tab-item {\n    line-height: 3rem;\n    font-size: var(--size-1);\n    padding: 0 0.5rem;\n    font-weight: 700;\n    &.inactive {\n      color: var(--gray-5);\n    }\n    &.active {\n      border-bottom: 0.15em solid var(--gray-1);\n    }\n    input {\n      opacity: 0;\n      position: absolute;\n      width: 0;\n      height: 0;\n    }\n  }\n  .swatch {\n    width: 2rem;\n    height: 2rem;\n    border-radius: 1rem;\n    background: var(--color);\n    flex: 0 0 auto;\n    box-shadow:\n      0 0 0 3px inset var(--base-color),\n      0 0 8px var(--gray-10);\n  }\n  textarea {\n    width: 0;\n    height: 0;\n    opacity: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  .options {\n    margin-bottom: 1rem;\n    & > * {\n      margin-right: 1rem;\n    }\n  }\n`\n\nconst ExportView = observer(({theme}) => {\n  const outputEl = useRef(null);\n  return (\n    <Styles className=\"ExportView\">\n      <div className=\"options\">\n        <select onChange={e => state.ui.setExportLanguage(e.target.value)} value={state.ui.exportLanguage}>\n          {[\"css\", \"sass\", \"csv\"].map(el => (\n            <option value={el}>{el.toUpperCase()}</option>\n          ))}\n        </select>\n        <select onChange={e => state.ui.setColorspace(e.target.value)} value={state.ui.colorspace}>\n          {[\"hex\", \"rgb\", \"hsl\",].map(el => (\n            <option value={el}>{el.toUpperCase()}</option>\n          ))}\n        </select>\n      </div>\n\n      <Button\n        onClick={() => {\n          outputEl.current.select()\n          document.execCommand('copy')\n          state.ui.addMessage({\n            body: 'Copied to clipboard',\n            status: 'success'\n          })\n        }}\n        label={<>\n          <Icon height={`${1.25 ** 2}em`} icon={copyIcon}/>\n          <span>Copy to clipboard</span>\n        </>}\n      />\n      <textarea ref={outputEl}>{theme.exportText}</textarea>\n      <pre>\n        {theme.exportText}\n      </pre>\n    </Styles>\n  );\n})\n\nexport default ExportView;\n","import React, {useState} from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport { applyPatch } from 'mobx-state-tree';\nimport { Icon } from '@iconify/react';\nimport Button from './Button';\nimport deleteIcon from '@iconify/icons-ic/outline-delete';\nimport warningIcon from '@iconify/icons-ic/baseline-warning';\nimport paletteIcon from '@iconify/icons-ic/outline-palette';\nimport roundFavorite from '@iconify/icons-ic/round-favorite';\n\nconst Styles = styled.div`\nposition: relative;\nbox-shadow: var(--box-shadow);\nborder-radius: 4px;\nbackground: var(--gray-6);\noverflow: hidden;\ndisplay: flex;\nflex-direction: column;\n\n.title {\n  display: flex;\n  margin: 0;\n  padding: 0.5rem;\n  font-size: var(--size-1);\n  line-height: 1rem;\n  input {\n    width: 100%;\n    flex: 1 1 auto;\n  }\n}\n\n.colors {\n  display: flex;\n  flex-flow: row;\n  flex: 1 1 auto;\n}\n.color {\n  display: flex;\n  flex-flow: column;\n  flex: 1 1 auto;\n}\n.shade {\n  flex: 1 1 auto;\n  background: var(--color);\n}\n`\n\nconst App = observer(({theme, onDoubleClick}) => {\n  return (\n    <Styles className=\"ThemePreview\" onDoubleClick={onDoubleClick}>\n      <h2 className=\"title\">\n        <input\n          type=\"text\"\n          value={theme.name}\n          onInput={(e)=> {applyPatch(theme, {op: 'add', path: './name', value: e.target.value})}}\n        />\n      </h2>\n      <div className=\"colors\">\n        {theme.colors.map(color => (\n          <div className=\"color\">\n            {color.shades.map(shade => (\n              <div className=\"shade\" style={{\"--color\": shade.hex}} />\n            ))}\n          </div>\n        ))}\n      </div>\n      <footer>\n        <Button status=\"text danger\" onClick={() => theme.toggleFavorite()} label={<Icon icon={roundFavorite} />} />\n        <Button status=\"text danger\" onClick={() => theme.remove()} label={<Icon icon={deleteIcon} />} confirmLabel={<Icon icon={warningIcon} />} />\n      </footer>\n    </Styles>\n  );\n})\n\nexport default App;\n","import React, {useState} from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport { applyPatch } from 'mobx-state-tree';\nimport EditorView from './EditorView'\nimport Preview from './Preview'\nimport ExportView from './ExportView'\nimport ThemePreview from './ThemePreview'\nimport Button from './Button'\nimport { Icon } from '@iconify/react';\nimport restoreIcon from '@iconify/icons-ic/baseline-restore';\nimport addIcon from '@iconify/icons-ic/round-add-circle-outline';\n\nconst Styles = styled.div`\npadding: 1rem;\noverflow: auto;\n.themes {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));\n  grid-auto-rows: 12rem;\n  margin-bottom: 1rem;\n  grid-gap: 1rem;\n}\n`\n\nconst App = observer(() => {\n  return (\n    <Styles className=\"Overview\">\n      <div className=\"themes\">\n        {state.themes.map(theme => (\n          <ThemePreview theme={theme} onDoubleClick={() => state.ui.setCurrentTheme(theme)}/>\n        ))}\n        <Button\n          status=\"primary\"\n          onClick={() => {state.addTheme()}}\n          label={<>\n            <Icon height={`${1.25 ** 2}em`} icon={addIcon} />\n            <span>New Theme</span>\n          </>}\n        />\n      </div>\n      <Button\n        status=\"danger\"\n        onClick={() => {state.resetStore()}}\n        label={<>\n          <Icon height={`${1.25 ** 2}em`} icon={restoreIcon} />\n          <span>Reset All</span>\n        </>}\n        confirmLabel={<>\n          <Icon height={`${1.25 ** 2}em`} icon={restoreIcon} />\n          <span>Are you sure?</span>\n        </>}\n      />\n    </Styles>\n  );\n})\n\nexport default App;\n","import React, {useState} from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport state from './state'\nimport styled from 'styled-components'\nimport { applyPatch } from 'mobx-state-tree';\nimport EditorView from './EditorView'\nimport Preview from './Preview'\nimport ExportView from './ExportView'\nimport OverviewView from './OverviewView'\nimport Button from './Button'\nimport { Icon } from '@iconify/react';\nimport tuneIcon from '@iconify/icons-ic/baseline-tune';\nimport importExportIcon from '@iconify/icons-ic/baseline-import-export';\nimport columnIcon from '@iconify/icons-ic/round-view-column';\nimport homeIcon from '@iconify/icons-ic/round-home';\n\nconst Styles = styled.div`\ndisplay: flex;\nheight: 100%;\nflex-flow: column;\n\n.tabs {\n  display: flex;\n  height: 3rem;\n  padding: 0 2rem;\n  border-bottom: 1px solid var(--gray-6);\n  box-shadow: var(--box-shadow);\n  z-index: 100;\n}\n.tab-item {\n  display: flex;\n  align-items: center;\n  line-height: 3rem;\n  font-size: var(--size-1);\n  padding: 0 0.5rem;\n  font-weight: 700;\n  &.inactive {\n    color: var(--gray-3);\n    svg {\n      color: var(--gray-4);\n    }\n  }\n  &.active {\n    box-shadow: 0 -0.15em var(--gray-1) inset;\n  }\n  &:active {\n    background: var(--gray-7);\n  }\n  input {\n    opacity: 0;\n    position: absolute;\n    width: 0;\n    height: 0;\n  }\n  svg {\n    color: var(--gray-2);\n    /* height: 1.25em; */\n    /* width: 1.25em; */\n    margin-right: 0.5rem;\n  }\n}\n.swatch {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 1rem;\n  background: var(--color);\n  flex: 0 0 auto;\n  box-shadow:\n    0 0 0 3px inset var(--base-color),\n    var(--box-shadow);\n}\n.app-footer {\n  border-top: 1px solid var(--gray-8);\n  padding: 1rem;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 4rem;\n  padding: 0 2rem;\n  background: var(--gray-8);\n  z-index: 1;\n  transition: 0.3s var(--ease-out) height;\n  box-shadow: 0 -2px 8px var(--gray-10);\n  & > * + * {\n    margin-left: 1rem;\n  }\n}\n.shade-count {\n  width: 3rem;\n  margin-left: 0.5rem;\n}\n.messages {\n  margin-left: auto;\n}\n.message {\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px var(--gray-10);\n\n  &.success {\n    background: var(--green-8);\n    color: var(--green-1);\n  }\n}\n\n`\n\nconst App = observer(() => {\n  return (\n    <Styles className=\"App\">\n      <div className=\"tabs\">\n        {[\n          { label: 'Overview', icon: homeIcon },\n          !!state.ui.currentTheme && { label: 'Editor', icon: tuneIcon },\n          !!state.ui.currentTheme && { label: 'Preview', icon: columnIcon },\n          !!state.ui.currentTheme && { label: 'Export', icon: importExportIcon }\n        ].filter(Boolean).map(tab => {\n          const value = tab.label.toLowerCase()\n          return (\n            <label className={`tab-item ${state.ui.tab === value ? 'active' : 'inactive'}`}>\n              <input\n                type=\"radio\"\n                checked={state.ui.tab === value}\n                value={value}\n                onChange={e => { if (e.target.checked) {\n                  if (value === 'overview') {\n                    state.ui.setCurrentTheme(null)\n                  }\n                  state.ui.setTab(e.target.value)\n                }}}\n              />\n              <Icon icon={tab.icon} /> {tab.label}\n            </label>\n          )\n        })}\n      </div>\n      {(() => {\n        switch (state.ui.view) {\n          case 'overview': return <OverviewView />\n          case 'editor': return <EditorView {...{theme: state.ui.currentTheme}}/>\n          case 'preview': return <Preview {...{theme: state.ui.currentTheme}}/>\n          case 'export': return <ExportView {...{theme: state.ui.currentTheme}}/>\n          default: return <OverviewView />\n        }\n      })()}\n    </Styles>\n  );\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}