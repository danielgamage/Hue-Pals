{"version":3,"sources":["logo.svg","state/index.js","state/localStorage.js","SplineGraph.js","LabeledCheckbox.js","Button.js","ColorInput.js","EditorView.js","Preview.js","ExportView.js","ThemePreview.js","OverviewView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Shade","types","model","id","optional","identifier","uuid","h","number","s","l","extend","self","views","value","format","unit","rgb","hsl","formatHex","r","g","b","Color","name","string","hueSpline","array","saturationSpline","lightnessSpline","bounds","hue","min","max","saturation","lightness","getYAtX","position","key","Math","curve","Bezier","line","p1","x","y","p2","intersect","get","intersects","Array","getParent","interpolationCount","fill","map","el","i","create","interpolations","actions","setHex","startOrEnd","v","newValue","index","remove","removeColor","duplicate","node","dup","getType","Object","assign","getSnapshot","addColor","Message","body","date","Date","toISOString","status","visible","boolean","afterCreate","setTimeout","dismiss","Theme","favorite","colors","baseColorId","maybe","backgroundColorId","backgroundShadeIndex","shade","undefined","find","color","shades","formatter","prefix","separator","ui","getRoot","showSemicolon","exportLanguage","camelCase","kebabCase","colorspace","join","options","push","item","splice","indexOf","toggleFavorite","resetStore","applySnapshot","defaultState","loadState","snapshot","removeTheme","setBackgroundShade","colorId","UIStore","isFooterOpen","isGraphVisible","isValueVisible","messages","tab","currentTheme","maybeNull","reference","filter","m","addMessage","toggleGraphs","toggleValues","toggleFooter","setColorspace","setExportLanguage","setTab","setCurrentTheme","theme","themes","RootStore","version","addTheme","persisitedState","serializedState","localStorage","getItem","JSON","parse","store","window","__store__","addEventListener","e","state","stringify","setItem","err","console","log","saveState","STATE","selectedNode","svgBounds","scaleX","scaleY","scaleYOncurve","Styles","styled","div","isMouseDown","SplineGraph","observer","spline","onSplineUpdate","width","height","attribute","onStartUpdate","onEndUpdate","svgRef","useRef","handleMouseDown","button","handleMouseMove","handleMouseEnd","clientX","clientY","current","getBoundingClientRect","scaleLinear","domain","range","clamp","mouse","newSpline","xIndex","yIndex","removeEventListener","graphScaleY","scaledS","className","viewBox","ref","x1","y1","x2","y2","cx","cy","onMouseDown","d","Root","label","LabeledCheckbox","props","type","checked","onChange","target","checkedLabel","uncheckedLabel","App","confirmLabel","onClick","children","requiresConfirmation","useState","clickedOnce","setClicked","ColorInput","style","baseColor","colorIndex","start","end","length","onInput","applyPatch","op","path","icon","circleHalfFill","circleHalf","Button","copyIcon","deleteIcon","warningIcon","title","arr","isExtreme","isBackground","namePadding","toString","disabled","hex","merged","paintBrushBroadFill","paintBrushBroad","swatchesIcon","ExportView","outputEl","toUpperCase","select","document","execCommand","exportText","onDoubleClick","heartFilledIcon","heartIcon","heartBold","swatchesBold","group","ThemePreview","addIcon","restoreIcon","backgroundShade","houseIcon","slidersIcon","circlesIcon","shareBold","Boolean","toLowerCase","view","OverviewView","EditorView","Preview","threeDotsVertical","parseInt","eyeIcon","eyeOffIcon","visibleMessages","message","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d95cdc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import {\n  types,\n  getType,\n  getSnapshot,\n  applySnapshot,\n  getParent,\n  getRoot,\n} from \"mobx-state-tree\"\nimport { format } from \"d3-format\"\nimport { hsl, rgb } from \"d3-color\"\nimport Bezier from \"bezier-js\"\nimport { loadState, saveState } from \"./localStorage\"\nimport { kebabCase, camelCase } from \"lodash\"\nimport uuid from \"uuid/v4\"\n\n// clone does... just that, and does not update `id`\nconst cloneWithNewId = (node, id) =>\n  getType(node).create(Object.assign({}, getSnapshot(node), { id }))\n\n/**\n * @name Shade\n * @description Mostly interpolations\n */\nconst Shade = types\n  .model(\"Shade\", {\n    id: types.optional(types.identifier, uuid),\n    h: types.optional(types.number, 0),\n    s: types.optional(types.number, 100),\n    l: types.optional(types.number, 100),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get merged() {\n          return [\n            { value: format(\".0f\")(self.h), unit: \"º\" },\n            { value: format(\".0f\")(self.s), unit: \"%\" },\n            { value: format(\".0f\")(self.l), unit: \"%\" },\n          ]\n        },\n        get hsl() {\n          return `hsl(${format(\".2f\")(self.h % 360)}, ${format(\".2f\")(\n            self.s\n          )}%, ${format(\".2f\")(self.l)}%)`\n        },\n        get hex() {\n          return rgb(self.hsl).formatHex()\n        },\n        get rgb() {\n          const value = rgb(self.hsl)\n          return `rgb(${format(\".2f\")(value.r)}, ${format(\".2f\")(\n            value.g\n          )}, ${format(\".2f\")(value.b)})`\n        },\n      },\n    }\n  })\n\n/**\n * @name Color\n * @description contains shades,\n */\nconst Color = types\n  .model(\"Color\", {\n    id: types.optional(types.identifier, uuid),\n    name: types.optional(types.string, \"Gray\"),\n    hueSpline: types.optional(types.array(types.number), [\n      0,\n      78,\n      0.33,\n      150,\n      0.66,\n      170,\n      1,\n      174,\n    ]),\n    saturationSpline: types.optional(types.array(types.number), [\n      0,\n      60,\n      0.5,\n      80,\n      0.8,\n      80,\n      1,\n      60,\n    ]),\n    lightnessSpline: types.optional(types.array(types.number), [\n      0,\n      90,\n      0.33,\n      66,\n      0.66,\n      33,\n      1,\n      12,\n    ]),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get interpolations() {\n          const bounds = {\n            hue: {\n              min: 0,\n              max: 480,\n            },\n            saturation: {\n              min: 0,\n              max: 100,\n            },\n            lightness: {\n              min: 0,\n              max: 100,\n            },\n          }\n          const getYAtX = (position, key) => {\n            position = Math.min(position, 0.999999)\n            var curve = new Bezier(...self[`${key}Spline`])\n            var line = {\n              p1: { x: position, y: -1000 },\n              p2: { x: position, y: 1000 },\n            }\n            const intersect = curve.get(curve.intersects(line)[0])\n            return Math.min(\n              Math.max(intersect.y, bounds[key].min),\n              bounds[key].max\n            )\n          }\n\n          return Array(getParent(self, 2).interpolationCount)\n            .fill()\n            .map((el, i) => {\n              const position = i / (getParent(self, 2).interpolationCount - 1)\n              return Shade.create({\n                h: getYAtX(position, \"hue\"),\n                s: getYAtX(position, \"saturation\"),\n                l: getYAtX(position, \"lightness\"),\n              })\n            })\n        },\n\n        get shades() {\n          return self.interpolations\n        },\n      },\n      actions: {\n        setHex(startOrEnd, v) {\n          const newValue = hsl(v)\n          const index = startOrEnd === \"start\" ? 1 : 7\n\n          self.hueSpline[index] = newValue.h || 0\n          self.saturationSpline[index] = newValue.s * 100\n          self.lightnessSpline[index] = newValue.l * 100\n        },\n        remove() {\n          getParent(self, 2).removeColor(self)\n        },\n        duplicate() {\n          const dup = cloneWithNewId(self, uuid())\n          getParent(self, 2).addColor(dup)\n        },\n      },\n    }\n  })\n\n/**\n * @name Message\n */\nexport const Message = types\n  .model(\"Message\", {\n    id: types.optional(types.identifier, uuid),\n    body: types.optional(types.string, \"\"),\n    date: types.optional(types.string, new Date().toISOString()),\n    status: types.optional(types.string, \"secondary\"),\n    visible: types.optional(types.boolean, true),\n  })\n  .actions((self) => ({\n    afterCreate() {\n      setTimeout(() => {\n        self.dismiss()\n      }, 5000)\n    },\n    dismiss() {\n      self.visible = false\n    },\n  }))\n\n/**\n * @name Theme\n */\nexport const Theme = types\n  .model(\"Theme\", {\n    id: types.optional(types.identifier, uuid),\n    name: types.optional(types.string, \"New Theme\"),\n    favorite: types.optional(types.boolean, false),\n    colors: types.optional(types.array(Color), [{}]),\n    baseColorId: types.maybe(types.string, null),\n    interpolationCount: types.optional(types.number, 10),\n    backgroundColorId: types.maybe(types.string),\n    backgroundShadeIndex: types.maybe(types.number),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get backgroundShade() {\n          if (\n            self.backgroundColorId &&\n            self.backgroundShadeIndex !== undefined\n          ) {\n            let shade\n            self.colors.find((color) => {\n              if (color.id === self.backgroundColorId) {\n                shade = color.shades[self.backgroundShadeIndex]\n                if (shade) {\n                  return true\n                }\n              }\n            })\n            return shade\n          }\n        },\n        get baseColor() {\n          return self.colors.find((color) => color.id === self.baseColorId)\n        },\n        get exportText() {\n          const ui = getRoot(self).ui\n\n          let formatter,\n            prefix,\n            separator,\n            showSemicolon = true\n          switch (ui.exportLanguage) {\n            case \"sass\":\n              formatter = camelCase\n              prefix = \"$\"\n              separator = \": \"\n              showSemicolon = false\n              break\n            case \"csv\":\n              formatter = (v) => v\n              prefix = \"\"\n              separator = \",\"\n              showSemicolon = false\n              break\n            case \"css\":\n            default:\n              formatter = kebabCase\n              prefix = \"--\"\n              separator = \": \"\n              break\n          }\n          return self.colors\n            .map((color) => {\n              return color.shades\n                .map((shade, i) => {\n                  const name = formatter(`${color.name} ${i + 1}`)\n                  const value = shade[ui.colorspace]\n\n                  return `${prefix}${name}${separator}${value}${\n                    showSemicolon ? \";\" : \"\"\n                  }`\n                })\n                .join(\"\\n\")\n            })\n            .join(\"\\n\\n\")\n        },\n      },\n      actions: {\n        addColor(options) {\n          self.colors.push(options || {})\n        },\n        removeColor(item) {\n          self.colors.splice(self.colors.indexOf(item), 1)\n        },\n        toggleFavorite() {\n          self.favorite = !self.favorite\n        },\n        resetStore() {\n          applySnapshot(self, defaultState)\n        },\n        loadState(snapshot) {\n          applySnapshot(self, snapshot)\n        },\n        remove() {\n          getParent(self, 2).removeTheme(self)\n        },\n        setBackgroundShade(colorId, value) {\n          self.backgroundColorId = colorId\n          self.backgroundShadeIndex = value\n        },\n      },\n    }\n  })\n\n/**\n * @name UIStore\n */\nexport const UIStore = types\n  .model(\"UIStore\", {\n    isFooterOpen: types.optional(types.boolean, false),\n    isGraphVisible: types.optional(types.boolean, true),\n    isValueVisible: types.optional(types.boolean, true),\n    exportLanguage: types.optional(types.string, \"css\"),\n    messages: types.array(Message),\n    colorspace: types.optional(types.string, \"hsl\"),\n    tab: types.optional(types.string, \"overview\"),\n    currentTheme: types.maybeNull(types.reference(Theme)),\n  })\n  .extend((self) => {\n    return {\n      views: {\n        get view() {\n          if (self.currentTheme) {\n            return self.tab\n          } else {\n            return \"overview\"\n          }\n        },\n        get visibleMessages() {\n          return self.messages.filter((m) => m.visible)\n        },\n      },\n      actions: {\n        addMessage(options) {\n          self.messages.push(options || {})\n        },\n        toggleGraphs(options) {\n          self.isGraphVisible = !self.isGraphVisible\n        },\n        toggleValues(options) {\n          self.isValueVisible = !self.isValueVisible\n        },\n        toggleFooter(options) {\n          self.isFooterOpen = !self.isFooterOpen\n        },\n        setColorspace(value) {\n          self.colorspace = value\n        },\n        setExportLanguage(value) {\n          self.exportLanguage = value\n        },\n        setTab(value) {\n          self.tab = value\n        },\n        setCurrentTheme(theme) {\n          self.currentTheme = theme\n          self.tab = \"editor\"\n          self.backgroundShadeIndex = undefined\n          self.backgroundColorId = undefined\n        },\n      },\n    }\n  })\n\nconst defaultState = {\n  themes: [\n    Theme.create({\n      colors: [Color.create({})],\n    }),\n  ],\n  ui: {},\n}\n\nexport const RootStore = types\n  .model(\"Store\", {\n    themes: types.array(Theme),\n    ui: types.optional(UIStore, {}),\n    version: \"1.0\",\n  })\n  .extend((self) => ({\n    actions: {\n      addTheme(options) {\n        self.themes.push(options || {})\n      },\n      resetStore() {\n        applySnapshot(self, defaultState)\n      },\n      loadState(snapshot) {\n        applySnapshot(self, snapshot)\n      },\n      removeTheme(item) {\n        self.themes.splice(self.themes.indexOf(item), 1)\n      },\n    },\n  }))\n\n// initialization and unload\n\nconst persisitedState = loadState()\n\nlet store = RootStore.create(persisitedState || defaultState)\nwindow.__store__ = store\n\nwindow.addEventListener(\"beforeunload\", function (e) {\n  // console.log('beforeunload')\n  // e.preventDefault()\n  // e.returnValue = '';\n  // console.log(JSON.parse(JSON.stringify(store)))\n  saveState(getSnapshot(store))\n})\n\nwindow.STATE = store\n\nexport default store\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"huepals__state\")\n    if (serializedState === null) {\n      return undefined\n    } else {\n      return JSON.parse(serializedState)\n    }\n  } catch {\n    return undefined\n  }\n}\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(\"huepals__state\", serializedState)\n  } catch (err) {\n    console.log({ err })\n  }\n}\n","import React, { useRef } from \"react\"\nimport logo from \"./logo.svg\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { scaleLinear } from \"d3-scale\"\n\nconst Styles = styled.div`\n  position: relative;\n  background: var(--body-background);\n  /* backdrop-filter: blur(10px); */\n  border-radius: 4px;\n\n  &.hue {\n    --start-saturation: 100%;\n    --end-saturation: 100%;\n    --start-lightness: 50%;\n    --end-lightness: 50%;\n  }\n  &.saturation {\n    --start-lightness: 50%;\n    --end-lightness: 50%;\n  }\n  &.lightness {\n  }\n\n  .rainbow {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    border-radius: 4px;\n    z-index: 0;\n    opacity: 0.5;\n    overflow: hidden;\n    &::before,\n    &::after {\n      content: \"\";\n      width: 2px;\n      height: 100%;\n      position: absolute;\n      background: linear-gradient(\n        to bottom,\n        hsl(480, 100%, 50%),\n        hsl(440, 100%, 50%),\n        hsl(400, 100%, 50%),\n        hsl(360, 100%, 50%),\n        hsl(320, 100%, 50%),\n        hsl(280, 100%, 50%),\n        hsl(240, 100%, 50%),\n        hsl(200, 100%, 50%),\n        hsl(160, 100%, 50%),\n        hsl(120, 100%, 50%),\n        hsl(80, 100%, 50%),\n        hsl(40, 100%, 50%),\n        hsl(0, 100%, 50%)\n      );\n    }\n    &::before {\n      left: 0;\n    }\n    &::after {\n      right: 0;\n    }\n  }\n  .splineGraph {\n    overflow: visible;\n    width: 8rem;\n    height: 100%;\n    vector-effect: non-scaling-stroke;\n    position: relative;\n    border-radius: 4px;\n    box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n\n    path,\n    line,\n    circle {\n      stroke-width: 2px;\n      fill: none;\n      vector-effect: non-scaling-stroke;\n      stroke-linecap: round;\n    }\n    line {\n      stroke: var(--fg-4);\n    }\n    path {\n      stroke: var(--fg-1);\n      pointer-events: none;\n    }\n    .point {\n      fill: transparent;\n      stroke-width: 2px;\n\n      &--oncurve {\n        r: 0.07;\n        fill: var(--bg-1);\n      }\n      &--oncurve-2 {\n        r: 0.06;\n        stroke: var(--fg-4);\n        stroke-width: 2.5px;\n        fill: var(--body-background);\n        pointer-events: none;\n      }\n      &--oncurve-sample {\n        r: 0.015;\n        pointer-events: none;\n        &.start {\n          fill: hsl(\n            var(--start-hue),\n            var(--start-saturation),\n            var(--start-lightness)\n          );\n        }\n        &.end {\n          fill: hsl(\n            var(--end-hue),\n            var(--end-saturation),\n            var(--end-lightness)\n          );\n        }\n      }\n      &--offcurve {\n        fill: var(--body-background);\n        r: 0.07;\n      }\n      &--offcurve-2 {\n        r: 0.06;\n        stroke: var(--fg-4);\n        stroke-width: 2.5px;\n        pointer-events: none;\n      }\n      &--offcurve-3 {\n        fill: var(--fg-4);\n        r: 0.015;\n        pointer-events: none;\n      }\n    }\n  }\n`\n\nlet isMouseDown = false\nlet initialMouse,\n  initial,\n  selectedNode,\n  svgBounds,\n  scaleX,\n  scaleY,\n  scaleYOncurve\n\nconst SplineGraph = observer(\n  ({\n    spline,\n    color,\n    onSplineUpdate,\n    max,\n    min,\n    width,\n    height = 1,\n    onStartUpdate,\n    onEndUpdate,\n    attribute,\n  }) => {\n    const svgRef = useRef(null)\n\n    const handleMouseDown = (e, index) => {\n      // right click\n      if (e.button === 2) return\n\n      isMouseDown = true\n      selectedNode = index\n      window.addEventListener(\"mousemove\", handleMouseMove)\n      window.addEventListener(\"mouseup\", handleMouseEnd)\n      window.addEventListener(\"mouseleave\", handleMouseEnd)\n\n      initialMouse = { x: e.clientX, y: e.clientY }\n      svgBounds = svgRef.current.getBoundingClientRect()\n      scaleX = scaleLinear()\n        .domain([svgBounds.x, svgBounds.x + svgBounds.width])\n        .range([0, 1])\n        .clamp(true)\n      scaleY = scaleLinear()\n        .domain([svgBounds.y, svgBounds.y + svgBounds.height])\n        .range([max, min])\n      scaleYOncurve = scaleLinear()\n        .domain([svgBounds.y, svgBounds.y + svgBounds.height])\n        .range([max, min])\n        .clamp(true)\n    }\n    const handleMouseMove = (e) => {\n      if (isMouseDown) {\n        const mouse = { x: e.clientX, y: e.clientY }\n        let newSpline = [...spline]\n\n        const xIndex = selectedNode * 2\n        const yIndex = xIndex + 1\n\n        switch (selectedNode) {\n          case 0: // first\n          case 3: // last\n            newSpline[yIndex] = scaleYOncurve(mouse.y)\n            break\n          case 1: // first offcurve\n          case 2: // last offcurve\n            newSpline[xIndex] = scaleX(mouse.x)\n            newSpline[yIndex] = scaleY(mouse.y)\n            break\n          default:\n            break\n        }\n\n        onSplineUpdate(newSpline)\n      }\n    }\n    const handleMouseEnd = (e) => {\n      isMouseDown = false\n      window.removeEventListener(\"mousemove\", handleMouseMove)\n      window.removeEventListener(\"mouseup\", handleMouseEnd)\n      window.removeEventListener(\"mouseleave\", handleMouseEnd)\n    }\n\n    const graphScaleY = scaleLinear().domain([min, max]).range([height, 0])\n\n    const scaledS = spline.map((el, i) => (i % 2 === 0 ? el : graphScaleY(el)))\n\n    return (\n      <Styles className={`SplineGraph ${attribute}`} height={height}>\n        {attribute === \"hue\" && <div className=\"rainbow\" />}\n        <svg className=\"splineGraph\" viewBox={`0 0 1 ${height}`} ref={svgRef}>\n          <line\n            x1={scaledS[0]}\n            y1={scaledS[1]}\n            x2={scaledS[2]}\n            y2={scaledS[3]}\n          />\n          <circle\n            className=\"point point--offcurve\"\n            cx={scaledS[2]}\n            cy={scaledS[3]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 1)\n            }}\n          />\n          <circle\n            className=\"point point--offcurve-2\"\n            cx={scaledS[2]}\n            cy={scaledS[3]}\n          />\n          <circle\n            className=\"point point--offcurve-3\"\n            cx={scaledS[2]}\n            cy={scaledS[3]}\n          />\n\n          <line\n            x1={scaledS[4]}\n            y1={scaledS[5]}\n            x2={scaledS[6]}\n            y2={scaledS[7]}\n          />\n          <circle\n            className=\"point point--offcurve\"\n            cx={scaledS[4]}\n            cy={scaledS[5]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 2)\n            }}\n          />\n          <circle\n            className=\"point point--offcurve-2\"\n            cx={scaledS[4]}\n            cy={scaledS[5]}\n          />\n          <circle\n            className=\"point point--offcurve-3\"\n            cx={scaledS[4]}\n            cy={scaledS[5]}\n          />\n\n          <path\n            d={`\n            M ${scaledS[0]}, ${scaledS[1]}\n            C ${scaledS[2]}, ${scaledS[3]}\n              ${scaledS[4]}, ${scaledS[5]}\n              ${scaledS[6]}, ${scaledS[7]}\n            `}\n          />\n\n          <circle\n            className=\"point point--oncurve\"\n            cx={scaledS[0]}\n            cy={scaledS[1]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 0)\n            }}\n          />\n          <circle\n            className=\"point point--oncurve-2\"\n            cx={scaledS[0]}\n            cy={scaledS[1]}\n          />\n          <circle\n            className=\"point point--oncurve-sample start\"\n            cx={scaledS[0]}\n            cy={scaledS[1]}\n          />\n\n          <circle\n            className=\"point point--oncurve\"\n            cx={scaledS[6]}\n            cy={scaledS[7]}\n            onMouseDown={(e) => {\n              handleMouseDown(e, 3)\n            }}\n          />\n          <circle\n            className=\"point point--oncurve-2\"\n            cx={scaledS[6]}\n            cy={scaledS[7]}\n          />\n          <circle\n            className=\"point point--oncurve-sample end\"\n            cx={scaledS[6]}\n            cy={scaledS[7]}\n          />\n        </svg>\n      </Styles>\n    )\n  }\n)\n\nexport default SplineGraph\n","import React from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\n\nconst Root = styled.label`\n  display: flex;\n  gap: 0.4rem;\n  align-items: center;\n  input {\n    position: absolute;\n    opacity: 0;\n  }\n  &.checked {\n    color: var(--checked-color, var(--fg-1));\n    svg {\n      color: var(--checked-icon-color, var(--fg-2));\n    }\n  }\n  &.unchecked {\n    color: var(--unchecked-color, var(--fg-1));\n    svg {\n      color: var(--unchecked-icon-color, var(--fg-4));\n    }\n  }\n`\n\nconst LabeledCheckbox = (props) => {\n  return (\n    <Root\n      className={`LabeledCheckbox ${props.value ? \"checked\" : \"unchecked\"}`}\n    >\n      <input\n        type={props.type || \"checkbox\"}\n        name={props.name}\n        checked={props.value}\n        onChange={(e) => props.onChange(e.target.checked)}\n      />\n      {props.value ? props.checkedLabel : props.uncheckedLabel}\n    </Root>\n  )\n}\n\nexport default LabeledCheckbox\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport styled from \"styled-components\"\n\nconst Styles = styled.button`\n  padding: 0.5rem 1rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--background);\n  border: 0;\n  border-radius: 4px;\n  color: inherit;\n  font: inherit;\n  font-weight: 700;\n  box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n  color: var(--color);\n  padding: 0.5rem 1rem;\n  &:focus {\n    outline: none;\n  }\n  &:focus-visible {\n    outline: 1px solid var(--fg-3);\n  }\n\n  &.primary {\n    --color: var(--blue-2);\n    --background: var(--blue-7);\n  }\n  &,\n  &.secondary {\n    --color: var(--fg-2);\n    --background: var(--body-background);\n  }\n  &.success {\n    --color: var(--green-2);\n    --background: var(--green-7);\n  }\n  &.danger {\n    --color: var(--red-4);\n    --background: var(--gray-7);\n  }\n  &.warning {\n    --color: var(--gray-2);\n    --background: var(--green-7);\n  }\n  &.info {\n    --color: var(--gray-2);\n    --background: var(--green-7);\n  }\n\n  &.text {\n    transform: none;\n    background: none;\n    box-shadow: none;\n  }\n  &:not(.text) {\n    & svg:not(:last-child) {\n      margin-right: 0.5em;\n    }\n    &:hover,\n    &:focus {\n      /* background: var(--highlight); */\n      outline: 0;\n    }\n    &:active {\n      transition: all 0.1s var(--ease-out);\n      transform: translateY(1px);\n      background: var(--background);\n      box-shadow: 0.5px 1px var(--highlight) inset,\n        -0.5px -1px var(--shading) inset, 0 0 var(--shading),\n        -1px -1px rgba(0, 0, 0, 0.1);\n    }\n  }\n`\n\nconst App = observer(\n  ({ status, className, label, confirmLabel, children, onClick }) => {\n    const requiresConfirmation = !!confirmLabel\n    const [clickedOnce, setClicked] = useState(false)\n\n    return (\n      <Styles\n        className={`Button ${className} ${status}`}\n        onClick={() => {\n          if (!requiresConfirmation || clickedOnce) {\n            onClick()\n            setClicked(false)\n          } else {\n            setClicked(true)\n\n            // Unset after 5s\n            setTimeout(() => {\n              setClicked(false)\n            }, 5000)\n          }\n        }}\n      >\n        {clickedOnce ? confirmLabel : label}\n      </Styles>\n    )\n  }\n)\n\nexport default App\n","import React, { useRef } from \"react\"\nimport logo from \"./logo.svg\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { line, curveBundle } from \"d3-shape\"\nimport { scaleLinear } from \"d3-scale\"\n\nconst Styles = styled.label`\n  cursor: pointer;\n\n  input {\n    position: absolute;\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`\n\nconst ColorInput = observer((props) => {\n  return (\n    <Styles className=\"ColorInput\">\n      <div\n        className=\"swatch\"\n        style={{ \"--color\": props.value, \"--base-color\": props.baseColor }}\n      />\n      <input type=\"color\" {...props} />\n    </Styles>\n  )\n})\n\nexport default ColorInput\n","import React from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport SplineGraph from \"./SplineGraph\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport LabeledCheckbox from \"./LabeledCheckbox\"\nimport Button from \"./Button\"\nimport ColorInput from \"./ColorInput\"\nimport { Icon } from \"@iconify/react\"\nimport deleteIcon from \"@iconify-icons/ph/trash-duotone\"\nimport warningIcon from \"@iconify-icons/ph/warning-duotone\"\nimport circleHalf from \"@iconify-icons/ph/circle-half-duotone\"\nimport circleHalfFill from \"@iconify-icons/ph/circle-half-fill\"\nimport swatchesIcon from \"@iconify-icons/ph/swatches-duotone\"\nimport copyIcon from \"@iconify-icons/ph/copy-duotone\"\nimport paintBrushBroad from \"@iconify-icons/ph/paint-brush-broad-duotone\"\nimport paintBrushBroadFill from \"@iconify-icons/ph/paint-brush-broad-fill\"\n\nconst Styles = styled.div`\n  display: flex;\n  height: 100%;\n  flex-flow: column;\n  overflow: auto;\n  padding-bottom: 3rem;\n  .graphs {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-areas:\n      \"4rem 4rem\"\n      \"4rem 4rem\";\n    padding: 1rem 0;\n    margin-bottom: -1rem;\n    background-image: linear-gradient(\n      to bottom,\n      var(--body-background) 85%,\n      transparent\n    );\n  }\n  .graph {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n  }\n  .graph-hue {\n    grid-row: 1 / 3;\n  }\n  .graph-lightness,\n  .graph-saturation {\n    h3 {\n      top: auto;\n      bottom: 0.5rem;\n    }\n  }\n  h3 {\n    position: absolute;\n    pointer-events: none;\n    color: var(--fg-3);\n    line-height: 1;\n    margin: 0;\n    top: 0.5rem;\n    left: 0.5rem;\n    z-index: 1;\n    abbr {\n      text-decoration: none;\n    }\n  }\n  .colors {\n    display: flex;\n    flex: 1 1 auto;\n    padding: 0 2rem 3rem;\n    width: min-content;\n  }\n  .color {\n    padding: 1rem 0 0;\n    width: 17rem;\n    flex: 0 0 auto;\n    text-overflow: ellipsis;\n    & + .color {\n      margin-left: 2rem;\n    }\n    &.values-hidden {\n      width: 128px;\n    }\n  }\n  .title-line {\n    font-size: var(--size-1);\n    display: flex;\n    align-items: center;\n    margin: 0;\n    gap: 0.8rem;\n    color: var(--fg-1);\n    --unchecked-icon-color: var(--fg-2);\n    --checked-icon-color: var(--fg-1);\n    input[type=\"text\"] {\n      all: unset;\n      width: 100%;\n    }\n    svg {\n      height: 20px;\n      width: 20px;\n    }\n    .checkbox {\n      cursor: pointer;\n      input {\n        position: absolute;\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      input:checked + svg {\n        color: var(--fg-1);\n      }\n    }\n  }\n  .list {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    margin-top: 1rem;\n  }\n  .shade {\n    position: relative;\n    display: flex;\n    text-align: left;\n    white-space: nowrap;\n    align-items: center;\n    border-radius: 4px;\n    gap: 1rem;\n\n    &:first-child,\n    &:last-child {\n      cursor: pointer;\n      &::before {\n        content: \"\";\n        position: absolute;\n        display: block;\n        top: -0.5rem;\n        right: -1rem;\n        bottom: -0.5rem;\n        left: -1rem;\n        border-radius: 4px;\n        background: var(--fg-3);\n        opacity: 0;\n        z-index: -1;\n      }\n      &:hover {\n        &::before {\n          opacity: 1;\n        }\n      }\n    }\n  }\n  .shade-text {\n    display: flex;\n    flex: 1 1 auto;\n    align-items: baseline;\n    margin: 0;\n    gap: 1rem;\n  }\n  .shade-background-field {\n    flex: 0 0 auto;\n    color: var(--fg-4);\n    width: 1rem;\n    position: relative;\n    &::after {\n      content: \"\";\n      opacity: 0.2;\n      position: absolute;\n      width: 1.6rem;\n      height: 1.6rem;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n    &.active {\n      color: var(--fg-1);\n    }\n\n    input {\n      opacity: 0;\n      position: absolute;\n      clip: rect(0 0 0 0);\n      clip-path: inset(50%);\n      width: 1px;\n      height: 1px;\n      overflow: hidden;\n      position: absolute;\n    }\n  }\n  .shade-title {\n    margin: 0;\n    font-size: var(--size-0);\n    color: var(--fg-5);\n  }\n  .shade-title-padding {\n    color: var(--fg-5);\n  }\n  .shade-value {\n    display: flex;\n    margin: 0;\n    font-size: var(--size-0);\n    font-family: var(--mono);\n    color: var(--fg-1);\n  }\n  .shade-value-value {\n    display: inline-block;\n    width: 2.5em;\n    text-align: right;\n  }\n  .shade-value-unit {\n    color: var(--fg-4);\n  }\n  .shade-value-separator {\n    display: inline-block;\n    color: var(--fg-5);\n    opacity: 0;\n  }\n  .add-button-container {\n    flex: 0 0 auto;\n    width: 256px;\n    margin: 1rem 0 1rem 2rem;\n  }\n  .add-button {\n    width: 100%;\n    font: inherit;\n    font-size: var(--size-1);\n    font-weight: 400;\n    position: sticky;\n    top: 1rem;\n  }\n  .remove-button {\n    line-height: 0.5;\n    z-index: 11;\n    padding-inline: 0;\n    font-size: var(--size-1);\n  }\n`\n\nconst App = observer(({ theme }) => {\n  return (\n    <Styles className={`Editor`}>\n      <div className=\"colors\">\n        {theme.colors.map((color, colorIndex) => {\n          const start = color.shades[0]\n          const end = color.shades[color.shades.length - 1]\n          return (\n            <div\n              className=\"color\"\n              style={{\n                \"--start-hue\": `${start.h}deg`,\n                \"--end-hue\": `${end.h}deg`,\n                \"--start-saturation\": `${start.s}%`,\n                \"--end-saturation\": `${end.s}%`,\n                \"--start-lightness\": `${start.l}%`,\n                \"--end-lightness\": `${end.l}%`,\n              }}\n            >\n              <h2 className=\"title-line\">\n                <input\n                  type=\"text\"\n                  value={color.name}\n                  onInput={(e) => {\n                    applyPatch(color, {\n                      op: \"add\",\n                      path: \"./name\",\n                      value: e.target.value,\n                    })\n                  }}\n                />\n                <LabeledCheckbox\n                  value={theme.baseColorId === color.id}\n                  onChange={(v) => {\n                    if (v) {\n                      applyPatch(theme, {\n                        op: \"add\",\n                        path: \"./baseColorId\",\n                        value: color.id,\n                      })\n                    } else {\n                      applyPatch(theme, {\n                        op: \"add\",\n                        path: \"./baseColorId\",\n                        value: undefined,\n                      })\n                    }\n                  }}\n                  checkedLabel={<Icon icon={circleHalfFill} />}\n                  uncheckedLabel={<Icon icon={circleHalf} />}\n                />\n                <Button\n                  status=\"text\"\n                  className=\"remove-button\"\n                  onClick={() => color.duplicate()}\n                  label={<Icon icon={copyIcon} />}\n                />\n                <Button\n                  status=\"text danger\"\n                  className=\"remove-button\"\n                  onClick={() => color.remove()}\n                  label={<Icon icon={deleteIcon} />}\n                  confirmLabel={<Icon icon={warningIcon} />}\n                />\n              </h2>\n              {state.ui.isGraphVisible && (\n                <div className=\"graphs\">\n                  <div className=\"graph graph-hue\">\n                    <h3>\n                      <abbr title=\"Hue\">H</abbr>\n                    </h3>\n                    <SplineGraph\n                      attribute=\"hue\"\n                      color={color}\n                      min={0}\n                      max={480}\n                      height={2.25}\n                      spline={color.hueSpline}\n                      onStartUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./start/h\",\n                          value: v,\n                        })\n                      }}\n                      onEndUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./end/h\",\n                          value: v,\n                        })\n                      }}\n                      onSplineUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./hueSpline\",\n                          value: v,\n                        })\n                      }}\n                    />\n                  </div>\n                  <div className=\"graph graph-saturation\">\n                    <h3>\n                      <abbr title=\"Saturation\">S</abbr>\n                    </h3>\n                    <SplineGraph\n                      attribute=\"saturation\"\n                      color={color}\n                      min={0}\n                      max={100}\n                      spline={color.saturationSpline}\n                      onStartUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./start/s\",\n                          value: v,\n                        })\n                      }}\n                      onEndUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./end/s\",\n                          value: v,\n                        })\n                      }}\n                      onSplineUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./saturationSpline\",\n                          value: v,\n                        })\n                      }}\n                    />\n                  </div>\n                  <div className=\"graph graph-lightness\">\n                    <h3>\n                      <abbr title=\"Lightness\">L</abbr>\n                    </h3>\n                    <SplineGraph\n                      attribute=\"lightness\"\n                      color={color}\n                      min={0}\n                      max={100}\n                      spline={color.lightnessSpline}\n                      onStartUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./start/l\",\n                          value: v,\n                        })\n                      }}\n                      onEndUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./end/l\",\n                          value: v,\n                        })\n                      }}\n                      onSplineUpdate={(v) => {\n                        applyPatch(color, {\n                          op: \"add\",\n                          path: \"./lightnessSpline\",\n                          value: v,\n                        })\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n              <div className=\"list\">\n                <div></div>\n                {color.shades.map((shade, i, arr) => {\n                  const isExtreme = i === 0 || i === arr.length - 1\n                  const isBackground =\n                    theme.backgroundColorId === color.id &&\n                    theme.backgroundShadeIndex === i\n                  const name = i + 1\n                  const namePadding = Array(\n                    arr.length.toString().length - name.toString().length\n                  ).fill(\"0\")\n                  return (\n                    <label className={`shade`} style={{ \"--color\": shade.hsl }}>\n                      <ColorInput\n                        disabled={!isExtreme}\n                        type=\"color\"\n                        value={shade.hex}\n                        baseColor={\n                          theme.baseColor && theme.baseColor.shades[i].hsl\n                        }\n                        onInput={(e) =>\n                          color.setHex(\n                            i === 0 ? \"start\" : \"end\",\n                            e.target.value\n                          )\n                        }\n                      />\n                      <dl className=\"shade-text\">\n                        <dt className=\"shade-title\">\n                          <span className=\"shade-title-padding\">\n                            {namePadding}\n                          </span>\n                          {name}–\n                        </dt>\n                        {state.ui.isValueVisible && (\n                          <dd className=\"shade-value\">\n                            {shade.merged.map((v, i) => (\n                              <>\n                                {i !== 0 && (\n                                  <span className=\"shade-value-separator\">\n                                    |\n                                  </span>\n                                )}\n                                <span className=\"shade-value-value\">\n                                  {v.value}\n                                  <span className=\"shade-value-unit\">\n                                    {v.unit}\n                                  </span>\n                                </span>\n                              </>\n                            ))}\n                          </dd>\n                        )}\n                      </dl>\n                      <label\n                        className={\n                          \"shade-background-field \" +\n                          `${isBackground ? \"active\" : \"\"}`\n                        }\n                      >\n                        <Icon\n                          icon={\n                            isBackground ? paintBrushBroadFill : paintBrushBroad\n                          }\n                        ></Icon>\n                        <input\n                          className=\"shade-background-input\"\n                          type=\"radio\"\n                          name=\"background-color\"\n                          id={shade.hsl}\n                          value={shade.hex}\n                          checked={\n                            theme.backgroundColorId === color.id &&\n                            theme.backgroundShadeIndex === i\n                          }\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              theme.setBackgroundShade(color.id, i)\n                            }\n                          }}\n                        />\n                      </label>\n                    </label>\n                  )\n                })}\n              </div>\n            </div>\n          )\n        })}\n\n        <div className=\"add-button-container\">\n          <Button\n            className=\"add-button\"\n            status=\"secondary\"\n            onClick={() => {\n              theme.addColor()\n            }}\n            label={\n              <>\n                <Icon icon={swatchesIcon} />\n                <span>Add Color</span>\n              </>\n            }\n          />\n        </div>\n      </div>\n    </Styles>\n  )\n})\n\nexport default App\n","import React from \"react\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { line, curveBasis } from \"d3-shape\"\nimport SplineGraph from \"./SplineGraph\"\nimport Button from \"./Button\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport ColorInput from \"./ColorInput\"\n\nconst Styles = styled.div`\n  display: flex;\n  height: 100%;\n  flex-flow: column;\n  padding: 1rem 1rem 4rem;\n  overflow: auto;\n  .colors {\n    display: flex;\n    flex: 1 1 auto;\n    padding-top: 6rem;\n  }\n  .color {\n    position: relative;\n    scroll-snap-align: start;\n    flex: 0 0 auto;\n    & + .color {\n      margin-left: 1rem;\n    }\n  }\n  .title {\n    display: flex;\n    align-items: center;\n    margin: 0 0 1rem;\n    input[type=\"text\"] {\n      all: unset;\n      width: 100%;\n      margin-left: 0.5rem;\n    }\n    .checkbox {\n      cursor: pointer;\n      input {\n        position: absolute;\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      .viz {\n        width: 1rem;\n        height: 1rem;\n        border: 2px solid var(--gray-8);\n        border-radius: 1rem;\n      }\n      input:checked + .viz {\n        border-color: var(--highlight-2);\n      }\n    }\n  }\n  .shade {\n    position: relative;\n    display: flex;\n    text-align: left;\n    white-space: nowrap;\n    align-items: center;\n    border-radius: 4px;\n    & + .shade {\n      margin-top: 1rem;\n    }\n  }\n  .row-labels {\n    padding-right: 1rem;\n  }\n  .row-label {\n    width: 3rem;\n    display: block;\n    line-height: 2rem;\n    margin-bottom: 1rem;\n    text-align: right;\n    white-space: nowrap;\n  }\n  .column-label {\n    position: absolute;\n    bottom: 100%;\n    right: 0;\n    transform: translate(-1rem, -1rem) rotate(45deg);\n    transform-origin: bottom right;\n    white-space: nowrap;\n  }\n  .playground {\n    max-width: 30rem;\n    line-height: 2rem;\n    user-select: text;\n    font-size: var(--size-0);\n    line-height: var(--size-2);\n    em {\n      font-size: var(--size-1);\n    }\n    *:focus {\n      outline: 0;\n    }\n  }\n`\n\nconst App = observer(({ theme }) => {\n  const size = 2\n  const padding = 1\n  const withPadding = (count) => count * size + (count - 1) * padding\n  const colorCount = theme.colors.length\n  const shadeCount = theme.colors[0].shades.length\n\n  return (\n    <Styles className=\"Preview\">\n      <div className=\"colors\">\n        <div className=\"row-labels\">\n          {theme.colors[0].shades.map((color, i) => (\n            <div className=\"row-label\">{i + 1}</div>\n          ))}\n        </div>\n        {theme.colors.map((color) => (\n          <div className=\"color\">\n            <div className=\"column-label\">{color.name}</div>\n            {color.shades.map((shade, i, arr) => (\n              <div className={`shade`} style={{ \"--color\": shade.hsl }}>\n                <div\n                  className=\"swatch\"\n                  style={{\n                    \"--base-color\":\n                      theme.baseColor && theme.baseColor.shades[i].hsl,\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      {/* <div className=\"playground\">\n        <h1 contentEditable spellCheck=\"false\">\n          Lorem ipsum\n        </h1>\n        <p>\n          <em contentEditable spellCheck=\"false\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n            sit in libero debitis dolorem accusantium nam beatae, doloribus,\n            assumenda, inventore cum placeat nihil unde perspiciatis harum\n            consectetur veniam! Harum, officiis!\n          </em>\n        </p>\n        <blockquote contentEditable spellCheck=\"false\">\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n          sit in libero debitis dolorem accusantium nam beatae, doloribus,\n          assumenda, inventore cum placeat nihil unde perspiciatis harum\n          consectetur veniam! Harum, officiis!\n        </blockquote>\n        <p contentEditable spellCheck=\"false\">\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n          sit in libero debitis dolorem accusantium nam beatae, doloribus,\n          assumenda, inventore cum placeat nihil unde perspiciatis harum\n          consectetur veniam! Harum, officiis!\n        </p>\n        <h4 contentEditable spellCheck=\"false\">\n          Lorem ipsum\n        </h4>\n        <p contentEditable spellCheck=\"false\">\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium\n          sit in libero debitis dolorem accusantium nam beatae, doloribus,\n          assumenda, inventore cum placeat nihil unde perspiciatis harum\n          consectetur veniam! Harum, officiis!\n        </p>\n        <Button\n          className=\"add-button\"\n          onClick={() => {}}\n          label={\n            <span contentEditable spellCheck=\"false\">\n              <span>Add Color</span>\n            </span>\n          }\n        />\n      </div> */}\n    </Styles>\n  )\n})\n\nexport default App\n","import React, { useRef } from \"react\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { Icon } from \"@iconify/react\"\nimport copyIcon from \"@iconify-icons/ph/copy-duotone\"\nimport Button from \"./Button\"\n\nconst Styles = styled.div`\n  height: 100%;\n  padding-bottom: 3rem;\n  flex: 1 1 auto;\n  overflow: auto;\n  user-select: text;\n  padding: 2rem;\n\n  textarea {\n    width: 0;\n    height: 0;\n    opacity: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  .options {\n    margin-bottom: 1rem;\n    & > * {\n      margin-right: 1rem;\n    }\n  }\n`\n\nconst ExportView = observer(({ theme }) => {\n  const outputEl = useRef(null)\n  return (\n    <Styles className=\"ExportView\">\n      <div className=\"options\">\n        <select\n          onChange={(e) => state.ui.setExportLanguage(e.target.value)}\n          value={state.ui.exportLanguage}\n        >\n          {[\"css\", \"sass\", \"csv\"].map((el) => (\n            <option value={el}>{el.toUpperCase()}</option>\n          ))}\n        </select>\n        <select\n          onChange={(e) => state.ui.setColorspace(e.target.value)}\n          value={state.ui.colorspace}\n        >\n          {[\"hex\", \"rgb\", \"hsl\"].map((el) => (\n            <option value={el}>{el.toUpperCase()}</option>\n          ))}\n        </select>\n      </div>\n\n      <Button\n        onClick={() => {\n          outputEl.current.select()\n          document.execCommand(\"copy\")\n          state.ui.addMessage({\n            body: \"Copied to clipboard\",\n            status: \"success\",\n          })\n        }}\n        label={\n          <>\n            <Icon height={`${1.25 ** 2}em`} icon={copyIcon} />\n            <span>Copy to clipboard</span>\n          </>\n        }\n      />\n      <textarea ref={outputEl}>{theme.exportText}</textarea>\n      <pre>{theme.exportText}</pre>\n    </Styles>\n  )\n})\n\nexport default ExportView\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport { Icon } from \"@iconify/react\"\nimport Button from \"./Button\"\nimport deleteIcon from \"@iconify-icons/ph/trash-duotone\"\nimport warningIcon from \"@iconify-icons/ph/warning-duotone\"\nimport heartIcon from \"@iconify-icons/ph/heart-duotone\"\nimport heartFilledIcon from \"@iconify-icons/ph/heart-fill\"\n\nconst Styles = styled.div`\n  position: relative;\n  box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  .title {\n    display: flex;\n    margin: 0;\n    padding: 0.5rem;\n    font-size: var(--size-1);\n    line-height: 1rem;\n    input {\n      width: 100%;\n      flex: 1 1 auto;\n      background: var(--shadow-5);\n      box-shadow: var(--shadow-recessed);\n    }\n  }\n\n  .colors {\n    display: flex;\n    flex-flow: row;\n    flex: 1 1 auto;\n  }\n  .color {\n    display: flex;\n    flex-flow: column;\n    flex: 1 1 auto;\n  }\n  .shade {\n    flex: 1 1 auto;\n    background: var(--color);\n  }\n  .Button {\n    padding: 1rem;\n  }\n`\n\nconst App = observer(({ theme, onDoubleClick }) => {\n  return (\n    <Styles className=\"ThemePreview\" onDoubleClick={onDoubleClick}>\n      <h2 className=\"title\">\n        <input\n          type=\"text\"\n          value={theme.name}\n          onInput={(e) => {\n            applyPatch(theme, {\n              op: \"add\",\n              path: \"./name\",\n              value: e.target.value,\n            })\n          }}\n        />\n      </h2>\n      <div className=\"colors\">\n        {theme.colors.map((color) => (\n          <div className=\"color\">\n            {color.shades.map((shade) => (\n              <div className=\"shade\" style={{ \"--color\": shade.hex }} />\n            ))}\n          </div>\n        ))}\n      </div>\n      <footer>\n        <Button\n          status=\"text danger\"\n          onClick={() => theme.toggleFavorite()}\n          label={<Icon icon={theme.favorite ? heartFilledIcon : heartIcon} />}\n        />\n        <Button\n          status=\"text danger\"\n          onClick={() => theme.remove()}\n          label={<Icon icon={deleteIcon} />}\n          confirmLabel={<Icon icon={warningIcon} />}\n        />\n      </footer>\n    </Styles>\n  )\n})\n\nexport default App\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport EditorView from \"./EditorView\"\nimport Preview from \"./Preview\"\nimport ExportView from \"./ExportView\"\nimport ThemePreview from \"./ThemePreview\"\nimport Button from \"./Button\"\nimport { Icon } from \"@iconify/react\"\nimport addIcon from \"@iconify-icons/ph/folder-plus-duotone\"\nimport restoreIcon from \"@iconify-icons/ph/clock-counter-clockwise-duotone\"\nimport heartBold from \"@iconify-icons/ph/heart-bold\"\nimport swatchesBold from \"@iconify-icons/ph/swatches-bold\"\n\nconst Styles = styled.div`\n  padding: 1rem;\n  overflow: auto;\n  .themes-header {\n    display: flex;\n    align-items: center;\n    gap: 0.4rem;\n    font-size: var(--size-1);\n    line-height: 1;\n  }\n  .themes {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(12rem, 1fr));\n    grid-auto-rows: 12rem;\n    margin-bottom: 1rem;\n    grid-gap: 1rem;\n  }\n`\n\nconst App = observer(() => {\n  return (\n    <Styles className=\"Overview\">\n      {[\n        {\n          label: (\n            <>\n              <Icon icon={heartBold} /> Favorites\n            </>\n          ),\n          themes: state.themes.filter((theme) => theme.favorite),\n        },\n        {\n          label: (\n            <>\n              <Icon icon={swatchesBold} /> All\n            </>\n          ),\n          themes: state.themes.filter((theme) => !theme.favorite),\n        },\n      ]\n        .filter((group) => group.themes.length)\n        .map((group) => (\n          <>\n            <h2 className=\"themes-header\">{group.label}</h2>\n            <div className=\"themes\">\n              {group.themes.map((theme) => (\n                <ThemePreview\n                  theme={theme}\n                  onDoubleClick={() => state.ui.setCurrentTheme(theme)}\n                />\n              ))}\n              <Button\n                onClick={() => {\n                  state.addTheme()\n                }}\n                label={\n                  <>\n                    <Icon height={`${1.25 ** 2}em`} icon={addIcon} />\n                    <span>New Theme</span>\n                  </>\n                }\n              />\n            </div>\n          </>\n        ))}\n      <Button\n        status=\"danger\"\n        onClick={() => {\n          state.resetStore()\n        }}\n        label={\n          <>\n            <Icon height={`${1.25 ** 2}em`} icon={restoreIcon} />\n            <span>Reset All</span>\n          </>\n        }\n        confirmLabel={\n          <>\n            <Icon height={`${1.25 ** 2}em`} icon={restoreIcon} />\n            <span>Are you sure?</span>\n          </>\n        }\n      />\n    </Styles>\n  )\n})\n\nexport default App\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { observer } from \"mobx-react\"\nimport state from \"./state\"\nimport styled from \"styled-components\"\nimport { applyPatch } from \"mobx-state-tree\"\nimport EditorView from \"./EditorView\"\nimport Preview from \"./Preview\"\nimport ExportView from \"./ExportView\"\nimport OverviewView from \"./OverviewView\"\nimport LabeledCheckbox from \"./LabeledCheckbox\"\nimport Button from \"./Button\"\nimport { Icon } from \"@iconify/react\"\nimport houseIcon from \"@iconify-icons/ph/house-line-bold\"\nimport slidersIcon from \"@iconify-icons/ph/sliders-bold\"\nimport circlesIcon from \"@iconify-icons/ph/circles-four-bold\"\nimport shareBold from \"@iconify-icons/ph/share-bold\"\nimport eyeIcon from \"@iconify-icons/ph/eye-duotone\"\nimport eyeOffIcon from \"@iconify-icons/ph/eye-slash-duotone\"\nimport threeDotsVertical from \"@iconify-icons/ph/dots-three-outline-vertical-duotone\"\n\nconst Styles = styled.div`\n  display: flex;\n  height: 100%;\n  flex-flow: column;\n  background: var(--body-background);\n  background-color: var(--body-background);\n  color: var(--fg-1);\n  user-select: none;\n  font-family: var(--sans);\n  .tabs {\n    display: flex;\n    height: 3rem;\n    padding: 0 2rem;\n    background-color: var(--body-background);\n    box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n    z-index: 100;\n  }\n  .tab-item {\n    display: flex;\n    align-items: center;\n    line-height: 3rem;\n    font-size: var(--size-0);\n    padding: 0 0.75rem;\n    font-weight: 700;\n    margin: 0 0.75rem 0 -0.75rem;\n    &.inactive {\n      color: var(--fg-3);\n      svg {\n        color: var(--fg-4);\n      }\n    }\n    &.active {\n      box-shadow: 0 -0.15em var(--fg-3) inset;\n    }\n    &:active {\n      background: var(--fg-5);\n    }\n    input {\n      opacity: 0;\n      position: absolute;\n      width: 0;\n      height: 0;\n    }\n    svg {\n      color: var(--fg-2);\n      /* height: 1.25em; */\n      /* width: 1.25em; */\n      margin-right: 0.4rem;\n    }\n  }\n  .swatch {\n    width: 2rem;\n    height: 2rem;\n    position: relative;\n    border-radius: 1rem;\n    background: linear-gradient(\n      to right,\n      var(--base-color, var(--color)),\n      var(--base-color, var(--color)) 49%,\n      var(--color) 51%\n    );\n    flex: 0 0 auto;\n    overflow: hidden;\n  }\n  .messages {\n    margin-left: auto;\n  }\n  .message {\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    box-shadow: 0 2px 8px var(--shadow-color);\n\n    &.success {\n      background: var(--green-8);\n      color: var(--green-1);\n    }\n  }\n  .app-footer {\n    padding: 1rem;\n    position: absolute;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 3rem;\n    padding: 0 2rem;\n    background: var(--bg-2);\n    z-index: 1;\n    transition: 0.3s var(--ease-out) height;\n    background-color: var(--body-background);\n    box-shadow: var(--shadow-beveled), var(--shadow-elevated);\n    --unchecked-icon-color: var(--fg-4);\n    --checked-icon-color: var(--fg-2);\n  }\n  .shade-count {\n    width: 3rem;\n    margin-left: 0.5rem;\n    box-shadow: var(--shadow-recessed);\n    background-color: var(--shadow-5);\n  }\n`\n\nconst App = observer(() => {\n  return (\n    <Styles\n      className={`App ${\n        state.ui.currentTheme &&\n        state.ui.currentTheme.backgroundShade &&\n        state.ui.currentTheme.backgroundShade.l > 50\n          ? \"theme--light\"\n          : \"theme--dark\"\n      }`}\n      style={{\n        \"--body-background\":\n          state.ui.currentTheme &&\n          state.ui.currentTheme.backgroundShade &&\n          state.ui.currentTheme.backgroundShade.hex,\n      }}\n    >\n      <div className=\"tabs\">\n        {[\n          { label: \"Overview\", icon: houseIcon },\n          !!state.ui.currentTheme && { label: \"Editor\", icon: slidersIcon },\n          !!state.ui.currentTheme && { label: \"Preview\", icon: circlesIcon },\n          !!state.ui.currentTheme && { label: \"Export\", icon: shareBold },\n        ]\n          .filter(Boolean)\n          .map((tab) => {\n            const value = tab.label.toLowerCase()\n            return (\n              <label\n                className={`tab-item ${\n                  state.ui.tab === value ? \"active\" : \"inactive\"\n                }`}\n              >\n                <input\n                  type=\"radio\"\n                  checked={state.ui.tab === value}\n                  value={value}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      if (value === \"overview\") {\n                        state.ui.setCurrentTheme(null)\n                      }\n                      state.ui.setTab(e.target.value)\n                    }\n                  }}\n                />\n                <Icon icon={tab.icon} /> {tab.label}\n              </label>\n            )\n          })}\n      </div>\n      {(() => {\n        switch (state.ui.view) {\n          case \"overview\":\n            return <OverviewView />\n          case \"editor\":\n            return <EditorView {...{ theme: state.ui.currentTheme }} />\n          case \"preview\":\n            return <Preview {...{ theme: state.ui.currentTheme }} />\n          case \"export\":\n            return <ExportView {...{ theme: state.ui.currentTheme }} />\n          default:\n            return <OverviewView />\n        }\n      })()}\n      {state.ui.view !== \"overview\" && (\n        <footer className={`app-footer`}>\n          <label>\n            <Icon icon={threeDotsVertical} />\n            Shades:\n            <input\n              className=\"shade-count\"\n              type=\"number\"\n              min=\"3\"\n              onChange={(e) => {\n                const value = parseInt(e.target.value)\n                if (value >= 3 && value <= 16) {\n                  applyPatch(state.ui.currentTheme, {\n                    op: \"add\",\n                    path: \"./interpolationCount\",\n                    value: value,\n                  })\n                }\n              }}\n              value={state.ui.currentTheme.interpolationCount}\n            />\n          </label>\n          <LabeledCheckbox\n            value={state.ui.isGraphVisible}\n            onChange={(v) => {\n              applyPatch(state.ui, {\n                op: \"add\",\n                path: \"./isGraphVisible\",\n                value: v,\n              })\n            }}\n            checkedLabel={\n              <>\n                <Icon icon={eyeIcon} /> Graphs\n              </>\n            }\n            uncheckedLabel={\n              <>\n                <Icon icon={eyeOffIcon} /> Graphs\n              </>\n            }\n          />\n          <div className=\"messages\">\n            {state.ui.visibleMessages.map((message) => (\n              <div className={`message ${message.status}`}>{message.body}</div>\n            ))}\n          </div>\n        </footer>\n      )}\n    </Styles>\n  )\n})\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}